var documenterSearchIndex = {"docs":
[{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"EditURL = \"https://github.com/CliMA/Land/blob/master/notebooks/RAMI_benchmarking_example.jl\"","category":"page"},{"location":"generated/RAMI_benchmarking_example/##-RAMI-Benchmarking-1","page":"RAMI benchmarking","title":"# RAMI Benchmarking","text":"","category":"section"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"The goal of the RAMI4PILPS experiment[1] is to evaluate different approaches by which Land Surface Models in larger Earth System Models quantify the radiation transfer within vegetation canopies. The RAMI4PILPS can be interpreted as a quality control mechanism used to:","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"quantify the errors in the radiative transfer scheme;\nidentify the impact that structural and spectral sub-grid variability may have on radiative transfer; and\nverify the conservation of energy at the level of the surface, as well as inconsistencies arising from different levels of assumptions/simplifications.","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"This approach involves direct comparison with reference solutions obtained from highly accurate 3D models identified during the third phase of the RAMI benchmarking exercise[2].","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"A set of 3D experiments compares the partitioning of incident solar energy into an absorbed (A) flux, a transmitted (T) flux component and the surface reflectance (R). The overall canopy structure for these test cases is reminiscent of open forest canopies with randomly oriented foliage, confined to spherical volumes located at varying heights above the ground. In here, we use a total of 36 test cases including various canopy density, soil brightness, and illumination conditions for the visible (VIS) (400-700nm) and near infra-red (NIR) (700-3000nm) spectral ranges.","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"[1]: J.L. Widlowski, B. Pinty, M. Clerici, Y. Dai, M. De Kauwe, K. de Ridder, A. Kallel, H. Kobayashi, T. Lavergne, W. Ni-Meister, A. Olchev, T. Quaife, S. Wang, W. Yang, Y. Yang, and H. Yuan (2011), RAMI4PILPS: An intercomparison of formulations for the partitioning of solar radiation in land surface models, Journal of Geophysical Research, 116, G02019, 25, DOI: 10.1029/2010JG001511.","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"[2]: Widlowski, J-L., M. Taberner, B. Pinty, V. Bruniquel-Pinel, M. Disney, R. Fernandes, J.-P. Gastellu-Etchegorry, N. Gobron, A. Kuusk, T. Lavergne, S. Leblanc, P. Lewis, E. Martin, M. Mottus, P. J. R. North, W. Qin, M.Robustelli, N. Rochdi, R.Ruiloba, C.Soler, R.Thompson, W. Verhoef, M. M.Verstraete, and D. Xie (2007), 'The third RAdiation transfer Model Intercomparison (RAMI) exercise: Documenting progress in canopy reflectance modelling', Journal of Geophysical Research, 112, D09111, 28, DOI: 10.1029/2006JD007821.","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"#### Use Julia Plots package and switch to plotly js option:\nusing Plots\npyplot()\n\n##----------------------------------------------------------------------------\n\n# First, we include Revise (good for debugging) and Parameters (tools for structures)\n\n##using Revise\nusing Parameters\n##----------------------------------------------------------------------------\n\n# Now include the Land modules\n\nusing Land\nusing Land.CanopyRT\n##----------------------------------------------------------------------------","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"##Defining all reference values for the Sparse case\n\n\nRAMI_SZA = [27.,60.,83.]\n\nRAMI_fabsRed_050_BLK =  [0.09380509999999999, 0.16259713, 0.53931207]\nRAMI_frefRed_050_BLK =  [0.00330673, 0.00517598, 0.01626682]\nRAMI_ftranRed_050_BLK =  [0.90288817, 0.83222689, 0.44442110999999995]\n\nRAMI_fabsRed_050_MED =  [0.10897124, 0.17760124000000002, 0.54764719]\nRAMI_frefRed_050_MED =  [0.09759354, 0.09107608, 0.06177913]\nRAMI_ftranRed_050_MED =  [0.90337609, 0.83265704, 0.44469279]\n\nRAMI_fabsRed_050_SNW =  [0.21471034, 0.28200132, 0.60564705]\nRAMI_frefRed_050_SNW =  [0.7526521700000001, 0.6879087300000001, 0.37825442000000004]\nRAMI_ftranRed_050_SNW =  [0.90659694, 0.83583194, 0.44718138]","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"arrayOfLeaves = Array{leafbio{FT,length(wl), length(wle), length(wlf),length(wle)*length(wlf)}, 1}(undef, CanopyRT.canopy.nlayers)\nfor i = 1:CanopyRT.canopy.nlayers\n    ##@show i\n    arrayOfLeaves[i] = leafbio{FT, length(wl), length(wle), length(wlf),length(wle)*length(wlf)}()\n    CanopyRT.fluspect!(arrayOfLeaves[i], CanopyRT.optis)\nend","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"function RAMI_case(LAI, soil_albedo, clumping_index)\n\n  CanopyRT.soil.albedo_SW[:] .=soil_albedo;\n  ##Clumping index\n  CanopyRT.canopy.Ω = 1.0\n  ##Viewing Zenith Angle in degrees\n  CanopyRT.angles.tto=0.0\n  ##Leaf Area index\n  CanopyRT.canopy.LAI=LAI\n\n  reflRed_SZA = []\n  absRed_SZA = []\n  transRed_SZA = []\n\n  for SZA=0.0:1:85\n    CanopyRT.angles.tts=SZA\n\n   CanopyRT.fluspect!(leaf, CanopyRT.optis)\n   CanopyRT.computeCanopyGeomProps!(canopy, angles,canOpt)\n   CanopyRT.computeCanopyMatrices!(arrayOfLeaves,canOpt);\n\n   # leaf reflectance RED\n   leaf.ρ_SW[28] = 0.0735\n   # leaf transmittance\n   leaf.τ_SW[28]= 0.0566\n\n    ##Setting all diffuse to zero\n    sunRad.E_diffuse[28] = 0.0\n\n    CanopyRT.RTM_SW!(canopy, canOpt, canRad,sunRad, CanopyRT.soil);\n    push!(reflRed_SZA, canRad.alb_direct[28])\n    push!(absRed_SZA, (sum(canRad.netSW_shade,dims=2)[28,1].+sum(canRad.netSW_sunlit,dims=2)[28,1])./(sunRad.E_diffuse[28].+sunRad.E_direct[28]))\n    push!(transRed_SZA,  (canOpt.Es_[28,end] .+ canRad.E_down[28,end])./(sunRad.E_diffuse[28].+sunRad.E_direct[28]))\n  end\n\n  ######## Clumped Case\n\n  reflRed_clump_SZA = []\n  absRed_clump_SZA = []\n  transRed_clump_SZA = []\n\n\n  ##Clumping index\n  CanopyRT.canopy.Ω = clumping_index\n\n  for SZA=0.0:1:85\n    CanopyRT.angles.tts=SZA\n\n    CanopyRT.fluspect!(leaf, CanopyRT.optis)\n    CanopyRT.computeCanopyGeomProps!(canopy, angles,canOpt)\n    CanopyRT.computeCanopyMatrices!(arrayOfLeaves,canOpt);\n\n    CanopyRT.RTM_SW!(canopy, canOpt, canRad,sunRad, CanopyRT.soil);\n    push!(reflRed_clump_SZA, canRad.alb_direct[28])\n    push!(absRed_clump_SZA, (sum(canRad.netSW_shade,dims=2)[28,1].+sum(canRad.netSW_sunlit,dims=2)[28,1])./(sunRad.E_diffuse[28].+sunRad.E_direct[28]))\n    push!(transRed_clump_SZA,  (canOpt.Es_[28,end] .+ canRad.E_down[28,end])./(sunRad.E_diffuse[28].+sunRad.E_direct[28]))\n\n  end\n\n  return reflRed_SZA,absRed_SZA,transRed_SZA,reflRed_clump_SZA,absRed_clump_SZA,transRed_clump_SZA\n\nend;\nnothing #hide","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"##Sparse case with black soil\nreflRed_SZA,absRed_SZA,transRed_SZA,reflRed_clump_SZA,absRed_clump_SZA,transRed_clump_SZA=RAMI_case(0.50265, 0.0, 0.365864235);\nnothing #hide","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"SZA=0:1:85\n\nplot(SZA, [reflRed_SZA, reflRed_clump_SZA],label=[\"\" \"reflectance\"] , layout = (1, 2),title=[\"050_BLK - Default\" \"Clumping\"])\nplot!(SZA, [absRed_SZA, absRed_clump_SZA] ,label=[\"\" \"absorptance\"])\nplot!(SZA, [transRed_SZA,transRed_clump_SZA],label=[\"\" \"transmittance\"])\n\n\n####Reference values\nscatter!(RAMI_SZA, [RAMI_frefRed_050_BLK,RAMI_frefRed_050_BLK],label=[\"\" \"RAMI reflectance\"])\nscatter!(RAMI_SZA, [RAMI_fabsRed_050_BLK,RAMI_fabsRed_050_BLK],label=[\"\" \"RAMI absorptance\"])\nscatter!(RAMI_SZA, [RAMI_ftranRed_050_BLK,RAMI_ftranRed_050_BLK],label=[\"\" \"RAMI transmittance\"])\nylabel!(\"Radiation Partitioning\")\nxlabel!(\"Sun Zenith Angle\")\n\nplot!(xlims = (0.0, 90.), ylims = (-0.05, 1.0), xticks = 0:20:91., yticks = 0:0.2:1.0)","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"##Sparse case with medium soil\nreflRed_SZA,absRed_SZA,transRed_SZA,reflRed_clump_SZA,absRed_clump_SZA,transRed_clump_SZA=RAMI_case(0.50265, 0.1217, 0.365864235);\nnothing #hide","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"SZA=0:1:85\n\nplot(SZA, [reflRed_SZA, reflRed_clump_SZA],label=[\"\" \"reflectance\"] , layout = (1, 2),title=[\"050_MED - Default\" \"Clumping\"])\nplot!(SZA, [absRed_SZA, absRed_clump_SZA] ,label=[\"\" \"absorptance\"])\nplot!(SZA, [transRed_SZA,transRed_clump_SZA],label=[\"\" \"transmittance\"])\n\n\n####Reference values\nscatter!(RAMI_SZA, [RAMI_frefRed_050_MED,RAMI_frefRed_050_MED],label=[\"\" \"RAMI reflectance\"])\nscatter!(RAMI_SZA, [RAMI_fabsRed_050_MED,RAMI_fabsRed_050_MED],label=[\"\" \"RAMI absorptance\"])\nscatter!(RAMI_SZA, [RAMI_ftranRed_050_MED,RAMI_ftranRed_050_MED],label=[\"\" \"RAMI transmittance\"])\nylabel!(\"Radiation Partitioning\")\nxlabel!(\"Sun Zenith Angle\")\n\nplot!(xlims = (0.0, 90.), ylims = (-0.05, 1.0), xticks = 0:20:91., yticks = 0:0.2:1.0)","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"##Sparse case with snowy soil\nreflRed_SZA,absRed_SZA,transRed_SZA,reflRed_clump_SZA,absRed_clump_SZA,transRed_clump_SZA=RAMI_case(0.50265, 0.9640, 0.365864235);\nnothing #hide","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"SZA=0:1:85\n\nplot(SZA, [reflRed_SZA, reflRed_clump_SZA],label=[\"\" \"reflectance\"] , layout = (1, 2),title=[\"050_SNW - Default\" \"Clumping\"])\nplot!(SZA, [absRed_SZA, absRed_clump_SZA] ,label=[\"\" \"absorptance\"])\nplot!(SZA, [transRed_SZA,transRed_clump_SZA],label=[\"\" \"transmittance\"])\n\n\n####Reference values\nscatter!(RAMI_SZA, [RAMI_frefRed_050_SNW,RAMI_frefRed_050_SNW],label=[\"\" \"RAMI reflectance\"])\nscatter!(RAMI_SZA, [RAMI_fabsRed_050_SNW,RAMI_fabsRed_050_SNW],label=[\"\" \"RAMI absorptance\"])\nscatter!(RAMI_SZA, [RAMI_ftranRed_050_SNW,RAMI_ftranRed_050_SNW],label=[\"\" \"RAMI transmittance\"])\nylabel!(\"Radiation Partitioning\")\nxlabel!(\"Sun Zenith Angle\")\n\nplot!(xlims = (0.0, 90.), ylims = (-0.05, 1.0), xticks = 0:20:91., yticks = 0:0.2:1.0)","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"##Defining all reference values for the Medium case\n\nRAMI_SZA = [27.,60.,83.]\n\n\nRAMI_fabsRed_150_BLK =  [0.28137804, 0.46514268999999997, 0.89063486]\nRAMI_frefRed_150_BLK =  [0.00923676, 0.01379672, 0.02970703]\nRAMI_ftranRed_150_BLK =  [0.7093851999999999, 0.52106059, 0.07965811]\n\nRAMI_fabsRed_150_MED =  [0.31403827, 0.49003033, 0.89432051]\nRAMI_frefRed_150_MED =  [0.06195053, 0.05151941, 0.03561715]\nRAMI_ftranRed_150_MED =  [0.7104761399999999, 0.52197456, 0.07977039000000001]\n\nRAMI_fabsRed_150_SNW =  [0.5431621799999999, 0.66519762, 0.9201217300000001]\nRAMI_frefRed_150_SNW =  [0.43100610000000006, 0.31581022999999997, 0.07698033]\nRAMI_ftranRed_150_SNW =  [0.71754777, 0.52755972, 0.08049832999999999]","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"##Medium case with black soil\nreflRed_SZA,absRed_SZA,transRed_SZA,reflRed_clump_SZA,absRed_clump_SZA,transRed_clump_SZA=RAMI_case(1.5017, 0.0, 0.405417644);\nnothing #hide","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"SZA=0:1:85\n\nplot(SZA, [reflRed_SZA, reflRed_clump_SZA],label=[\"\" \"reflectance\"] , layout = (1, 2),title=[\"150_BLK - Default\" \"Clumping\"])\nplot!(SZA, [absRed_SZA, absRed_clump_SZA] ,label=[\"\" \"absorptance\"])\nplot!(SZA, [transRed_SZA,transRed_clump_SZA],label=[\"\" \"transmittance\"])\n\n\n####Reference values\nscatter!(RAMI_SZA, [RAMI_frefRed_150_BLK,RAMI_frefRed_150_BLK],label=[\"\" \"RAMI reflectance\"])\nscatter!(RAMI_SZA, [RAMI_fabsRed_150_BLK,RAMI_fabsRed_150_BLK],label=[\"\" \"RAMI absorptance\"])\nscatter!(RAMI_SZA, [RAMI_ftranRed_150_BLK,RAMI_ftranRed_150_BLK],label=[\"\" \"RAMI transmittance\"])\nylabel!(\"Radiation Partitioning\")\nxlabel!(\"Sun Zenith Angle\")\n\nplot!(xlims = (0.0, 90.), ylims = (-0.05, 1.0), xticks = 0:20:91., yticks = 0:0.2:1.0)","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"##Medium case with medium soil\nreflRed_SZA,absRed_SZA,transRed_SZA,reflRed_clump_SZA,absRed_clump_SZA,transRed_clump_SZA=RAMI_case(1.5017, 0.1217, 0.405417644);\nnothing #hide","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"SZA=0:1:85\n\nplot(SZA, [reflRed_SZA, reflRed_clump_SZA],label=[\"\" \"reflectance\"] , layout = (1, 2),title=[\"150_MED - Default\" \"Clumping\"])\nplot!(SZA, [absRed_SZA, absRed_clump_SZA] ,label=[\"\" \"absorptance\"])\nplot!(SZA, [transRed_SZA,transRed_clump_SZA],label=[\"\" \"transmittance\"])\n\n\n####Reference values\nscatter!(RAMI_SZA, [RAMI_frefRed_150_MED,RAMI_frefRed_150_MED],label=[\"\" \"RAMI reflectance\"])\nscatter!(RAMI_SZA, [RAMI_fabsRed_150_MED,RAMI_fabsRed_150_MED],label=[\"\" \"RAMI absorptance\"])\nscatter!(RAMI_SZA, [RAMI_ftranRed_150_MED,RAMI_ftranRed_150_MED],label=[\"\" \"RAMI transmittance\"])\nylabel!(\"Radiation Partitioning\")\nxlabel!(\"Sun Zenith Angle\")\n\nplot!(xlims = (0.0, 90.), ylims = (-0.05, 1.0), xticks = 0:20:91., yticks = 0:0.2:1.0)","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"##Medium case with black soil\nreflRed_SZA,absRed_SZA,transRed_SZA,reflRed_clump_SZA,absRed_clump_SZA,transRed_clump_SZA=RAMI_case(1.5017, 0.9640, 0.405417644);\nnothing #hide","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"SZA=0:1:85\n\nplot(SZA, [reflRed_SZA, reflRed_clump_SZA],label=[\"\" \"reflectance\"] , layout = (1, 2),title=[\"150_SNW - Default\" \"Clumping\"])\nplot!(SZA, [absRed_SZA, absRed_clump_SZA] ,label=[\"\" \"absorptance\"])\nplot!(SZA, [transRed_SZA,transRed_clump_SZA],label=[\"\" \"transmittance\"])\n\n\n####Reference values\nscatter!(RAMI_SZA, [RAMI_frefRed_150_SNW,RAMI_frefRed_150_SNW],label=[\"\" \"RAMI reflectance\"])\nscatter!(RAMI_SZA, [RAMI_fabsRed_150_SNW,RAMI_fabsRed_150_SNW],label=[\"\" \"RAMI absorptance\"])\nscatter!(RAMI_SZA, [RAMI_ftranRed_150_SNW,RAMI_ftranRed_150_SNW],label=[\"\" \"RAMI transmittance\"])\nylabel!(\"Radiation Partitioning\")\nxlabel!(\"Sun Zenith Angle\")\n\nplot!(xlims = (0.0, 90.), ylims = (-0.05, 1.0), xticks = 0:20:91., yticks = 0:0.2:1.0)","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"##Defining all reference values for the Dense case\n\nRAMI_SZA = [27.,60.,83.]\n\n\nRAMI_fabsRed_250_BLK =  [0.46852539, 0.70426097, 0.9461774300000001]\nRAMI_frefRed_250_BLK =  [0.01445858, 0.02016963, 0.03477486]\nRAMI_ftranRed_250_BLK =  [0.51701603, 0.2755694, 0.01904771]\n\nRAMI_fabsRed_250_MED =  [0.50540545, 0.72429659, 0.94742381]\nRAMI_frefRed_250_MED =  [0.03953053, 0.03315039, 0.03580858]\nRAMI_ftranRed_250_MED =  [0.51811911, 0.27616192, 0.01909098]\n\nRAMI_fabsRed_250_SNW =  [0.76512258, 0.86538802, 0.9562473199999999]\nRAMI_frefRed_250_SNW =  [0.21595537, 0.124503, 0.043056080000000004]\nRAMI_ftranRed_250_SNW =  [0.5256125, 0.280805, 0.01935]","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"##Dense case with black soil\nreflRed_SZA,absRed_SZA,transRed_SZA,reflRed_clump_SZA,absRed_clump_SZA,transRed_clump_SZA=RAMI_case(2.5007, 0.0, 0.45946608);\nnothing #hide","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"SZA=0:1:85\n\nplot(SZA, [reflRed_SZA, reflRed_clump_SZA],label=[\"\" \"reflectance\"] , layout = (1, 2),title=[\"250_BLK - Default\" \"Clumping\"])\nplot!(SZA, [absRed_SZA, absRed_clump_SZA] ,label=[\"\" \"absorptance\"])\nplot!(SZA, [transRed_SZA,transRed_clump_SZA],label=[\"\" \"transmittance\"])\n\n\n####Reference values\nscatter!(RAMI_SZA, [RAMI_frefRed_250_BLK,RAMI_frefRed_250_BLK],label=[\"\" \"RAMI reflectance\"])\nscatter!(RAMI_SZA, [RAMI_fabsRed_250_BLK,RAMI_fabsRed_250_BLK],label=[\"\" \"RAMI absorptance\"])\nscatter!(RAMI_SZA, [RAMI_ftranRed_250_BLK,RAMI_ftranRed_250_BLK],label=[\"\" \"RAMI transmittance\"])\nylabel!(\"Radiation Partitioning\")\nxlabel!(\"Sun Zenith Angle\")\n\nplot!(xlims = (0.0, 90.), ylims = (-0.05, 1.0), xticks = 0:20:91., yticks = 0:0.2:1.0)","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"##Medium case with medium soil\nreflRed_SZA,absRed_SZA,transRed_SZA,reflRed_clump_SZA,absRed_clump_SZA,transRed_clump_SZA=RAMI_case(2.5007, 0.1217, 0.45946608);\nnothing #hide","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"SZA=0:1:85\n\nplot(SZA, [reflRed_SZA, reflRed_clump_SZA],label=[\"\" \"reflectance\"] , layout = (1, 2),title=[\"250_MED - Default\" \"Clumping\"])\nplot!(SZA, [absRed_SZA, absRed_clump_SZA] ,label=[\"\" \"absorptance\"])\nplot!(SZA, [transRed_SZA,transRed_clump_SZA],label=[\"\" \"transmittance\"])\n\n\n####Reference values\nscatter!(RAMI_SZA, [RAMI_frefRed_250_MED,RAMI_frefRed_250_MED],label=[\"\" \"RAMI reflectance\"])\nscatter!(RAMI_SZA, [RAMI_fabsRed_250_MED,RAMI_fabsRed_250_MED],label=[\"\" \"RAMI absorptance\"])\nscatter!(RAMI_SZA, [RAMI_ftranRed_250_MED,RAMI_ftranRed_250_MED],label=[\"\" \"RAMI transmittance\"])\nylabel!(\"Radiation Partitioning\")\nxlabel!(\"Sun Zenith Angle\")\n\nplot!(xlims = (0.0, 90.), ylims = (-0.05, 1.0), xticks = 0:20:91., yticks = 0:0.2:1.0)","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"##Dense case with snowy soil\nreflRed_SZA,absRed_SZA,transRed_SZA,reflRed_clump_SZA,absRed_clump_SZA,transRed_clump_SZA=RAMI_case(2.5007, 0.9640, 0.45946608);\nnothing #hide","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"SZA=0:1:85\n\nplot(SZA, [reflRed_SZA, reflRed_clump_SZA],label=[\"\" \"reflectance\"] , layout = (1, 2),title=[\"250_SNW - Default\" \"Clumping\"])\nplot!(SZA, [absRed_SZA, absRed_clump_SZA] ,label=[\"\" \"absorptance\"])\nplot!(SZA, [transRed_SZA,transRed_clump_SZA],label=[\"\" \"transmittance\"])\n\n\n####Reference values\nscatter!(RAMI_SZA, [RAMI_frefRed_250_SNW,RAMI_frefRed_250_SNW],label=[\"\" \"RAMI reflectance\"])\nscatter!(RAMI_SZA, [RAMI_fabsRed_250_SNW,RAMI_fabsRed_250_SNW],label=[\"\" \"RAMI absorptance\"])\nscatter!(RAMI_SZA, [RAMI_ftranRed_250_SNW,RAMI_ftranRed_250_SNW],label=[\"\" \"RAMI transmittance\"])\nylabel!(\"Radiation Partitioning\")\nxlabel!(\"Sun Zenith Angle\")\n\nplot!(xlims = (0.0, 90.), ylims = (-0.05, 1.0), xticks = 0:20:91., yticks = 0:0.2:1.0)","category":"page"},{"location":"generated/RAMI_benchmarking_example/####-Test-a-VZA-dependence-in-the-principal-plane-with-clumping-1","page":"RAMI benchmarking","title":"### Test a VZA dependence in the principal plane with clumping","text":"","category":"section"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"# Define a few wavelengths:\nwl_blue = 450.0;\nwl_red = 600.0;\nwl_FarRed = 740.0;\nwl_Red = 685.0;\nind_wle_blue  = argmin(abs.(wle .-wl_blue));\nind_wle_red = argmin(abs.(wle .-wl_red));\nind_wlf_FR  = argmin(abs.(wlf .-wl_FarRed));\nind_wlf_R  = argmin(abs.(wlf .-wl_Red));\nind_red = argmin(abs.(wl .-wl_Red));\nind_NIR = argmin(abs.(wl .-800));\nnothing #hide","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"SIF_FR = Float32[]\nSIF_R = Float32[]\nreflVIS = Float32[]\nreflNIR = Float32[]\n\n#### Just running the code over all geometries:\n##MED\nCanopyRT.soil.albedo_SW[:] .=0.1217;\n#### Set sun SZA to 27 degrees\nCanopyRT.angles.tts=27.\n#### Set 0 azimuth (principal plane)\nCanopyRT.angles.psi=0\n\n##Adding clumping\nCanopyRT.canopy.Ω = 1.0\n#### LAI of 3:\nCanopyRT.canopy.LAI = 2.5007\n#### Define VZA\nVZA=collect(-89.5:0.5:89.5)\n\nfor VZA_ in VZA\n    CanopyRT.angles.tto=VZA_\n    CanopyRT.computeCanopyGeomProps!(canopy, angles,canOpt);\n    CanopyRT.computeCanopyMatrices!(arrayOfLeaves,canOpt);\n    CanopyRT.RTM_SW!(canopy, canOpt, canRad,sunRad, CanopyRT.soil);\n    CanopyRT.computeSIF_Fluxes!(arrayOfLeaves, canOpt, canRad, canopy, CanopyRT.soil);\n    #### Handpicked indices in\n    push!(reflVIS, canRad.alb_obs[ind_red])\n    push!(reflNIR, canRad.alb_obs[ind_NIR])\n    push!(SIF_R , canRad.SIF_obs[ind_wlf_R])\n    push!(SIF_FR, canRad.SIF_obs[ind_wlf_FR ])\nend\n\n\n##Adding clumping\nCanopyRT.canopy.Ω = 0.45946608\n\nSIF_FR_clump = Float32[]\nSIF_R_clump = Float32[]\nreflVIS_clump = Float32[]\nreflNIR_clump = Float32[]\n\n\nfor VZA_ in VZA\n    CanopyRT.angles.tto=VZA_\n    CanopyRT.computeCanopyGeomProps!(canopy, angles,canOpt);\n    CanopyRT.computeCanopyMatrices!(arrayOfLeaves,canOpt);\n    CanopyRT.RTM_SW!(canopy, canOpt, canRad,sunRad, CanopyRT.soil);\n    CanopyRT.computeSIF_Fluxes!(arrayOfLeaves, canOpt, canRad, canopy, CanopyRT.soil);\n    #### Handpicked indices in\n    push!(reflVIS_clump, canRad.alb_obs[ind_red])\n    push!(reflNIR_clump, canRad.alb_obs[ind_NIR])\n    push!(SIF_R_clump , canRad.SIF_obs[ind_wlf_R])\n    push!(SIF_FR_clump, canRad.SIF_obs[ind_wlf_FR ])\nend","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"#### Plots Visible\nplot(VZA, reflVIS, color=[:black],label=\"Red Reflectance\", lw=2)\nplot!(VZA, SIF_R/30, color=[:orange],label=\"Red SIF (/30)\", lw=2)\nplot!(VZA, reflVIS_clump, color=[:black], line=(:dash,2),label=\"Red Reflectance w/ Clumping\", lw=2)\nplot!(VZA, SIF_R_clump/30, color=[:orange], line=(:dash,2),label=\"Red SIF (/30) w/ Clumping\", lw=2)\nxlabel!(\"Viewing Zenith Angle\")","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"#### Plots Visible\nplot(VZA, reflNIR, color=[:black],label=\"NIR Reflectance\", lw=2)\nplot!(VZA, SIF_FR/6, color=[:orange],label=\"Far Red SIF (/6)\", lw=2)\nplot!(VZA, reflNIR_clump, color=[:black], line=(:dash,2),label=\"NIR Reflectance w/ Clumping\", lw=2)\nplot!(VZA, SIF_FR_clump/6, color=[:orange], line=(:dash,2),label=\"Far Red SIF (/6) w/ Clumping\", lw=2)\nxlabel!(\"Viewing Zenith Angle\")","category":"page"},{"location":"generated/RAMI_benchmarking_example/###-BRDF-sampling-1","page":"RAMI benchmarking","title":"## BRDF sampling","text":"","category":"section"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"By going through viewing and azimuth angles, we can construct a full BRDF for reflectance and SIF emissions at different wavelengths:","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"reflVIS = Float32[]\nreflNIR = Float32[]\nSIF_FR = Float32[]\nSIF_R  = Float32[]\n\n##MED\nCanopyRT.soil.albedo_SW[:] .=0.1217;\nCanopyRT.angles.tts=27.\nCanopyRT.angles.psi=0\nCanopyRT.canopy.LAI=2.5007\nCanopyRT.canopy.Ω = 1.0\nfor psi=0:360\n    CanopyRT.angles.psi=psi\n    for VZA=0:1:85\n        CanopyRT.angles.tto=VZA\n\n        CanopyRT.computeCanopyGeomProps!(canopy, angles,canOpt);\n        CanopyRT.computeCanopyMatrices!(arrayOfLeaves,canOpt);\n        CanopyRT.RTM_SW!(canopy, canOpt, canRad,sunRad, CanopyRT.soil);\n        CanopyRT.computeSIF_Fluxes!(arrayOfLeaves, canOpt, canRad, canopy, CanopyRT.soil);\n        push!(reflVIS, canRad.alb_obs[28])\n        push!(reflNIR, canRad.alb_obs[52])\n        push!(SIF_R , canRad.SIF_obs[8])\n        push!(SIF_FR, canRad.SIF_obs[20])\n    end\nend\n\n##Adding clumping\nCanopyRT.canopy.Ω = 0.45946608\n\nSIF_FR_clump = Float32[]\nSIF_R_clump = Float32[]\nreflVIS_clump = Float32[]\nreflNIR_clump = Float32[]\n\nfor psi=0:360\n    CanopyRT.angles.psi=psi\n    for VZA=0:1:85\n        CanopyRT.angles.tto=VZA\n\n        CanopyRT.computeCanopyGeomProps!(canopy, angles,canOpt);\n        CanopyRT.computeCanopyMatrices!(arrayOfLeaves,canOpt);\n        CanopyRT.RTM_SW!(canopy, canOpt, canRad,sunRad, CanopyRT.soil);\n        CanopyRT.computeSIF_Fluxes!(arrayOfLeaves, canOpt, canRad, canopy, CanopyRT.soil);\n        push!(reflVIS_clump, canRad.alb_obs[28])\n        push!(reflNIR_clump, canRad.alb_obs[52])\n        push!(SIF_R_clump , canRad.SIF_obs[8])\n        push!(SIF_FR_clump, canRad.SIF_obs[20])\n    end\nend","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"A = reshape(reflNIR, ( 86,361));\nB = reshape(reflVIS, ( 86,361));\nSIFFER = reshape(SIF_R, ( 86,361));\nSIFFER_FR = reshape(SIF_FR, ( 86,361));\n\nA_clump = reshape(reflNIR_clump, ( 86,361));\nB_clump = reshape(reflVIS_clump, ( 86,361));\nSIFFER_clump = reshape(SIF_R_clump, ( 86,361));\nSIFFER_FR_clump = reshape(SIF_FR_clump, ( 86,361));\nnothing #hide","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"hm = contourf(deg2rad.(collect((0:360))),collect(0:1:85),  [A,A_clump],  proj=:polar, color=:viridis, alpha=0.5,levels=collect(0.25:0.012:0.5),layout = (1, 2),title=[\"NIR reflectance BRDF\" \"Clumping\"])","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"hm = contourf(deg2rad.(collect((0:360))),collect(0:1:85),  [B,B_clump],  proj=:polar, color=:viridis, alpha=0.5,levels=collect(0.0:0.005:0.045),layout = (1, 2),title=[\"Red reflectance BRDF\" \"Clumping\"])","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"hm = contourf(deg2rad.(collect((0:360))),collect(0:1:85),  [SIFFER,SIFFER_clump],  proj=:polar, color=:viridis, alpha=0.5,levels=collect(0.3:0.05:0.8),layout = (1, 2),title=[\"Red SIF emission BRDF\" \"Clumping\"])","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"hm = contourf(deg2rad.(collect((0:360))),collect(0:1:85),  [SIFFER_FR,SIFFER_FR_clump],  proj=:polar, color=:viridis, alpha=0.5,levels=collect(1.:0.1:3.5),layout = (1, 2),title=[\"Red SIF emission BRDF\" \"Clumping\"])","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"","category":"page"},{"location":"generated/RAMI_benchmarking_example/#","page":"RAMI benchmarking","title":"RAMI benchmarking","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"EditURL = \"https://github.com/CliMA/Land/blob/master/notebooks/Leaf-Photosynthesis-Synthesis.jl\"","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#Leaf-Level-Photosynthesis-1","page":"Leaf Photosynthetic rates","title":"Leaf Level Photosynthesis","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"Here, we will go one step further and look at the entire leaf-level response, including the impact of stomatal conductance as well.","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#Stomatal-Conductance-1","page":"Leaf Photosynthetic rates","title":"Stomatal Conductance","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"Before, we focussed mainly on the demand-driven constraints through Rubisco and RuBP regeneration. Stomatal conductance is highly important as it drives the suppy-side of photosynthesis and interacts with the energy balance and leaf temperature as latent heat fluxes are a major factor in surface cooling.","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"Before, we have derived net rates of photosynthesis A_n, which have to be matched with the supply side through CO_2 diffusion:","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"A_n^diff = g_leafC(C_a-C_c)","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"which can be separated into diffusion from the air to the leaf surface with a boundary layer conductance g_bC, diffusion from the surface to the interstitial air-space with stomatal conductance g_sC and diffusion from the  interstitial air-space to the chloroplast with mesophyll conductance g_mC (the letter C stands for CO2 here, as the diffusion constants vary with species, e.g. H_2O stomatal conductance is a factor 1.6 higher than those for CO_2):","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"A_n^diff = g_bC(C_a-C_s) = g_sC(C_s-C_i) = g_mC(C_i-C_c) = g_leafC(C_a-C_c)","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"g_leafC = left(frac1g_bC+g_sC+g_mCright)^-1","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"The importance of stomatal conductance and its interplay with photosynthesis here is that the supply and demand rates determine C_c. A reduction in C_c reduces the demand-limited rates while it increase the diffusion rates (at a given g). Most models run internal so-called A-C_c iterations to ensure both rates are balanced and in steady-state (partial C_cpartial t=0). We implement this option but also opt to run stomatal conductance prognostically, as stomata don't open and close instantanously but have a response time of around 15 minutes.","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#Empirical-Stomatal-Conductance-models-1","page":"Leaf Photosynthetic rates","title":"Empirical Stomatal Conductance models","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"Currently, we can choose between the widely used Ball-Berry model[1] or the Medlyn approach[2].","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"Ball and Berry derived the following empirical formulation based on leaf level data (RH is relative humidity):","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"g_sw = g_0 + g_1  fracA_n cdot RHC_s","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"Medlyn derived the following equations based on stomatal optimization theory but in a similar form as the BB model:","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"g_sw = g_0 + left(1 + fracg_1sqrtVPDright) fracA_nC_s","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"Both models are proportional to A_n and inversely proportional to C_s, with the main difference in the dependence on either relative humidity in the Ball-Berry model vs. vapor pressure deficit (VPD) in Medlyn et al. In both cases, g_0 is the residual conductivity even if stomata are fully closed and g_1 is related to the marginal water cost of plant carbon gain. Importantly, g_1 can't be inter-changed between the formulations, underlining again that parameters have to be optimized with respect to the model that is eventually being used.","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#Stomatal-Optimization-Theories-1","page":"Leaf Photosynthetic rates","title":"Stomatal Optimization Theories","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"The empirical formulations only hold in well-watered soil and our main goal is to implement stomatal optimization models to take the entire soil-plant-atmosphere continuum into account[3]. Here, we will just use the empirical models and steady-state photosynthesis to show the underlying principles.","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"[1]: Ball, J.T., Woodrow, I.E. and Berry, J.A., 1987. A model predicting stomatal conductance and its contribution to the control of photosynthesis under different environmental conditions. In Progress in photosynthesis research (pp. 221-224). Springer, Dordrecht.","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"[2]: Medlyn, B.E., Duursma, R.A., Eamus, D., Ellsworth, D.S., Prentice, I.C., Barton, C.V., Crous, K.Y., De Angelis, P., Freeman, M. and Wingate, L., 2011. Reconciling the optimal and empirical approaches to modelling stomatal conductance. Global Change Biology, 17(6), pp.2134-2144.","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"[3]: Wang, Y., Sperry, J.S., Anderegg, W.R., Venturas, M.D. and Trugman, A.T., 2020. A theoretical and empirical assessment of stomatal optimization modeling. New Phytologist.","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"# Add usual tools we use:\n##using Revise\nusing BenchmarkTools\nusing Plots\npyplot()","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"# load Photosynthesis module:\nusing Land.Photosynthesis","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"# Specify Field Type\nconst FT = Float32","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"# Create a standard leaf with defualt parameters\nleaf = leaf_params{FT}();\n# Create a standard meteo structure:\nmet = meteo{FT}();\nnothing #hide","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"# Setting some standard values (dynamic-state=false forces A-Cc iterations)\nleaf.dynamic_state = false\nmet.stab_type_stable = 2;\nmet.e_air = 1500;\nmet.T_air = 298;\nnothing #hide","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#Modular-stucture:-1","page":"Leaf Photosynthetic rates","title":"Modular stucture:","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"The most important step is to define which submodules to use. There might be different implementations for Fluorescence, Photosynthesis (C3,C4,etc), respiration, stomatal conductance (e.g. Ball-Berry, Medlyn), the T-dependence of J_max, V_cmax and Michaelis Menten constants as well as leaf boundary layer resistance (setting it to 0 here to mimic well vented laboratory leaf level measurements) and colimitation.","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"Below, we create two different model setups with a C3 and C4 photosynthesis pathway. Note that we chose the Ball Berry stomatal conductance model with different g_1 for C3 and C4 (C4 typically much lower).","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"# use this as the boundary layer resistance (1/gb)\nra = 0.5\n\n# C3 Photosynthesis\nmodC3 = Photosynthesis.PhotoMods(\n    fluorescence    = FlexasTolBerryFluorescence{FT}(),\n    photosynthesis  = C3FvCBPhoto(),\n    respiration     = RespirationCLM{FT}(),\n    stomatal        = BallBerryStomata{FT}(g1=8),\n    Jmax            = JmaxCLM{FT}(),\n    Vmax            = VcmaxCLM{FT}(),\n    MichaelisMenten = MM_CLM{FT}(),\n    BoundaryLayer   = FixedBoundaryResistance{FT}(ra=ra),\n    colimitation = CurvedColimit{FT}(0.99));\n\n# C4 Photosynthesis\nmodC4 = Photosynthesis.PhotoMods(\n    fluorescence    = FlexasTolBerryFluorescence{FT}(),\n    photosynthesis  = C4CollatzPhoto(),\n    respiration     = RespirationCLM{FT}(),\n    stomatal        = BallBerryStomata{FT}(g1=4),\n    Jmax            = JmaxCLM{FT}(),\n    Vmax            = VcmaxCLM{FT}(),\n    MichaelisMenten = MM_CLM{FT}(),\n    BoundaryLayer   = FixedBoundaryResistance{FT}(ra=ra),\n    colimitation = CurvedColimit{FT}(0.99));\nnothing #hide","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#Light-response-curves-1","page":"Leaf Photosynthetic rates","title":"Light response curves","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"Now we can compute light response curves for C3 and C4 photosynthesis","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"##Again, this looks tedious and repetitive but is the easiest way to do this right now:\n\n# Variable I want to save:\nAg_C3 = Float32[]; Ag_C4 = Float32[]\nAn_C3 = Float32[]; An_C4 = Float32[]\nAj_C3 = Float32[]; Aj_C4 = Float32[]\nAp_C3 = Float32[]; Ap_C4 = Float32[]\nAc_C3 = Float32[]; Ac_C4 = Float32[]\nCc_C3 = Float32[]; Cc_C4 = Float32[]\ngs_C3 = Float32[]; gs_C4 = Float32[]\n\n# Set Ca to 400ppm\nmet.Ca = 400\n\n# Set leaf temperature:\nleaf.T = 298.0\n\n# Specify Vcmax\nleaf.Vcmax25 = 90\nleaf.Jmax25 = 90*1.9\n\n# Specify curvature for J\nleaf.θ_j = 0.995\n\nAPAR = collect(0:10:1700)\nfor leaf.APAR in APAR\n    # Run C3 photosynthesis:\n    LeafPhotosynthesis!(modC3, leaf, met);\n    # Save leaf variables:\n    push!(An_C3, leaf.An);push!(Ag_C3, leaf.Ag);push!(Aj_C3, leaf.Aj);push!(Ap_C3, leaf.Ap); push!(Ac_C3, leaf.Ac); push!(Cc_C3, leaf.Cc); push!(gs_C3, leaf.gs)\n\n    # Run C4 photosynthesis:\n    LeafPhotosynthesis!(modC4, leaf, met);\n    # Save leaf variables:\n    push!(An_C4, leaf.An);push!(Ag_C4, leaf.Ag);push!(Aj_C4, leaf.Aj);push!(Ap_C4, leaf.Ap); push!(Ac_C4, leaf.Ac); push!(Cc_C4, leaf.Cc);; push!(gs_C4, leaf.gs)\nend","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"# Testing some times, how long does this take (as we need to run it globally, it has to be efficient)?\n@btime LeafPhotosynthesis!(modC3, leaf, met);\n@btime LeafPhotosynthesis!(modC4, leaf, met);\nnothing #hide","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#C3-Light-Response-Curve-1","page":"Leaf Photosynthetic rates","title":"C3 Light Response Curve","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"##plot(APAR, An,  label=\"An\")\nplot(APAR, Ag_C3,color=[:black],lw=1, alpha=0.7, label=\"Ag C3\")\nplot!(APAR, Ac_C3,line=(:dash,2), label=\"Ac C3\")\nplot!(APAR, Aj_C3,line=(:dash,2), label=\"Aj C3\")\nplot!(APAR, Ap_C3,line=(:dash,2), label=\"Ap C3\" )\nxlabel!(\"APAR [μmol/m2/s]\")\nylabel!(\"Aᵢ [μmol/m2/s]\")\ntitle!(\"C3 photosynthesis light response\")","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#C4-Light-Response-Curve-1","page":"Leaf Photosynthetic rates","title":"C4 Light Response Curve","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"##plot(APAR, An,  label=\"An\")\nplot(APAR, Ag_C4,color=[:black],lw=1, alpha=0.7, label=\"Ag C4\")\nplot!(APAR, Ac_C4,line=(:dash,2), label=\"Ac C4\")\nplot!(APAR, Aj_C4,line=(:dash,2), label=\"Aj C4\")\nplot!(APAR, Ap_C4,line=(:dash,2), label=\"Ap C4\" )\nxlabel!(\"APAR [μmol/m2/s]\")\nylabel!(\"Aᵢ [μmol/m2/s]\")\ntitle!(\"C4 photosynthesis light response\")","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#Dependence-of-C_c-on-light-1","page":"Leaf Photosynthetic rates","title":"Dependence of C_c on light","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"Increasing light should result in overall lower C_c concentrations. C4 plants can work with much lower C_c as for C4, the concentration in the bundle sheath cells count, not the mesophyll.","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"plot(APAR, Cc_C4/met.Ca,color=[:black],lw=2, alpha=0.7, label=\"Cc/Ca C4\")\nplot!(APAR, Cc_C3/met.Ca,color=[:orange],lw=2, alpha=0.7, label=\"Cc/Ca C3\")\nxlabel!(\"APAR [μmol/m²/s]\")\nylabel!(\"Cc/Ca [-]\")","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#Dependence-of-stomatal-coductance-g_s-1","page":"Leaf Photosynthetic rates","title":"Dependence of stomatal coductance g_s","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"plot(APAR, gs_C4,color=[:black],lw=2, alpha=0.7, label=\"gs C4\")\nplot!(APAR, gs_C3,color=[:orange],lw=2, alpha=0.7, label=\"gs C3\")\nxlabel!(\"APAR [μmol/m²/s]\")\nylabel!(\"gs\")","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#More-complex-examples:-1","page":"Leaf Photosynthetic rates","title":"More complex examples:","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"##Again, this looks tedious and repetitive but is the easiest way to do this right now:\n\n# Now I want to vary T, APAR and CO2:\nAPAR = [100.0, 250.0, 500.0, 1000.0, 1500.0]\nCO2  = collect(2:2:800)\nT    = collect(265:1:310)\n\nn1 = length(APAR);\nn2 = length(CO2);\nn3 = length(T);\n\nAg_C3 = zeros(n1,n2,n3); Ag_C4 = zeros(n1,n2,n3)\nAn_C3 = zeros(n1,n2,n3); An_C4 = zeros(n1,n2,n3)\nAj_C3 = zeros(n1,n2,n3); Aj_C4 = zeros(n1,n2,n3)\nAp_C3 = zeros(n1,n2,n3); Ap_C4 = zeros(n1,n2,n3)\nAc_C3 = zeros(n1,n2,n3); Ac_C4 = zeros(n1,n2,n3)\nCc_C3 = zeros(n1,n2,n3); Cc_C4 = zeros(n1,n2,n3)\ngs_C3 = zeros(n1,n2,n3); gs_C4 = zeros(n1,n2,n3)\n\n# Set Ca to 400ppm\nmet.Ca = 400\n\n# Set leaf temperature:\nleaf.T = 298.0\n\n# Specify Vcmax\nleaf.Vcmax25 = 90\nleaf.Jmax25 = 90*1.9\n\n# Specify curvature for J\nleaf.θ_j = 0.995","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"# Run this over all potential 3D dimensions:\n\n# I really like the compact form of nested loops in Julia!\nfor iA in eachindex(APAR), iC in eachindex(CO2), iT in eachindex(T)\n    met.Ca    = CO2[iC];\n    # make sure we have a reasonable start:\n    leaf.Cc   = met.Ca;\n    leaf.Cs   = met.Ca;\n    leaf.gs   = 0.1;\n    leaf.T    = T[iT];\n    leaf.APAR = APAR[iA];\n\n    # Run C3 photosynthesis:\n    LeafPhotosynthesis!(modC3, leaf, met);\n\n    # Save leaf variables:\n    An_C3[iA,iC,iT]=leaf.An;\n    Ag_C3[iA,iC,iT]=leaf.Ag;\n    Aj_C3[iA,iC,iT]=leaf.Aj;\n    Ap_C3[iA,iC,iT]=leaf.Ap;\n    Ac_C3[iA,iC,iT]=leaf.Ac;\n    Cc_C3[iA,iC,iT]=leaf.Cc;\n    gs_C3[iA,iC,iT]=leaf.gs;\n\n    # Run C4 photosynthesis:\n    leaf.Cc   = met.Ca;\n    leaf.Cs   = met.Ca;\n    leaf.gs   = 0.1;\n    LeafPhotosynthesis!(modC4, leaf, met);\n\n    # Save leaf variables:\n    An_C4[iA,iC,iT]=leaf.An;\n    Ag_C4[iA,iC,iT]=leaf.Ag;\n    Aj_C4[iA,iC,iT]=leaf.Aj;\n    Ap_C4[iA,iC,iT]=leaf.Ap;\n    Ac_C4[iA,iC,iT]=leaf.Ac;\n    Cc_C4[iA,iC,iT]=leaf.Cc;\n    gs_C4[iA,iC,iT]=leaf.gs;\nend","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#Plotting-2D-contours-of-A_n-vs.-CO_2-and-Temperature-1","page":"Leaf Photosynthetic rates","title":"Plotting 2D contours of A_n vs. CO_2 and Temperature","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"##Let's take one slice in APAR space:\ni = 4\n\n# and plot:\ncontourf(T.-273.15, CO2, An_C3[i,:,:])\nxlabel!(\"T [°C]\")\nylabel!(\"Ambient CO₂ [ppm]\")\ntitle!(\"C3 , An [μmol/m²/s] at APAR=$(APAR[i])\")","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"# Same for C4 plants, why is it so different??\n\ncontourf(T.-273.15, CO2, An_C4[i,:,:])\nxlabel!(\"T [°C]\")\nylabel!(\"Ambient CO₂ [ppm]\")\ntitle!(\"C4 , An [μmol/m²/s] at APAR=$(APAR[i])\")","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#Ambient-CO_2-response-curves-and-limiting-rates-for-C3-and-C4-1","page":"Leaf Photosynthetic rates","title":"Ambient CO_2 response curves and limiting rates for C3 and C4","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"iA = 4; iT=31\nplot( CO2, Ag_C3[iA,:,iT],color=[:black],lw=2, alpha=0.7, label=\"Ag C3\")\nplot!(CO2, Ac_C3[iA,:,iT],line=(:dash,2), label=\"Ac C3\")\nplot!(CO2, Aj_C3[iA,:,iT],line=(:dash,2), label=\"Aj C3\")\nplot!(CO2, Ap_C3[iA,:,iT],line=(:dash,2), label=\"Ap C3\" )\nxlabel!(\"CO₂ [ppm]\")\nylabel!(\"Aᵢ [μmol/m2/s]\")\ntitle!(\"Ambient C3 CO₂ response, T=$(T[iT]-273), APAR=$(APAR[iA])\")","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"iA = 4; iT=31\nplot(CO2, Ag_C4[iA,:,iT],color=[:black],lw=2, alpha=0.7, label=\"Ag C4\")\nplot!(CO2, Ac_C4[iA,:,iT],line=(:dash,2), label=\"Ac C4\")\nplot!(CO2, Aj_C4[iA,:,iT],line=(:dash,2), label=\"Aj C4\")\nplot!(CO2, Ap_C4[iA,:,iT],line=(:dash,2), label=\"Ap C4\")\nxlabel!(\"CO₂ [ppm]\")\nylabel!(\"Aᵢ [μmol/m2/s]\")\ntitle!(\"Ambient C4 CO₂ response, T=$(T[iT]-273), APAR=$(APAR[iA])\")","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#Summary:-1","page":"Leaf Photosynthetic rates","title":"Summary:","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"Play around a bit with different parameters. You can also try to change humidity at the leaf level or the boundary layer resistance. There are many things that can be tested, and we often like to go to the extremes (T, CO_2, ra) to check for bugs, which most often have to do with the A-C_c iterations.","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"Note of caution: we really plotted CO_2 response curves against ambient CO_2. At low C_c, leaves can be a source of CO_2 due to the CO_2 compensation point (i.e. A_g can be negative!). Also, at CO_2=0, stomatal conductance using the empirical formulation goes to infty, which can cause unwanted behavior.","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"Test things out, learn by changing parameters and try to break it!","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"","category":"page"},{"location":"generated/Leaf-Photosynthesis-Synthesis/#","page":"Leaf Photosynthetic rates","title":"Leaf Photosynthetic rates","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"EditURL = \"https://github.com/CliMA/Land/blob/master/notebooks/Leaf-Photosynthesis.jl\"","category":"page"},{"location":"generated/Leaf-Photosynthesis/#Leaf-Photosynthesis-Basics-1","page":"Leaf Level Basics","title":"Leaf Photosynthesis Basics","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"This tutorial will walk you through the most basic aspects of how we implement Photosynthesis at the leaf level. Most of the concepts are described in the literature, with the first quantitative approach to modeling photosynthesis given in Farquhar, von Caemmerer and Berry[1] in their seminal 1980 paper for C3 photosynthesis. C4 photosynthesis is largely based on Collatz et al[2] but we approach the photosynthesis modeling with a rather generic approach that facilitates the application of different photosynthesis modeling approaches without changing the core code base. A good overview on the entire process of photosynthesis and different parameterizations can be found in Bonan[3].","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"At the core of both C3 and C4 photosynthesis is an enzyme catalyzed reaction of ribulose-1,5-bisphosphate (RuBP) with CO_2, yielding two 3-carbon compounds (phosphoglycerate (PGA)) as the initial products of photosynthesis. The enzyme RuBP carboxylase/oxygenase (Rubisco) catalyzes this reaction. With the regeneration of the substrate RuBP through the light reactions (using produced ATP and NADPH), the core cycle of photosynthesis is formed. This cycle was discovered in 1950 by Melvin Calvin, James Bassham, and Andrew Benson at the University of California, Berkeley[4][5] by using the radioactive isotope carbon-14.","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"An oxygenation step of RuBP releases half a CO_2. This so called photorespiration process results in inefficiencies in C3 photosynthesis, as both CO_2 and O_2 compete at the Rubisco site. The overall photosynthetic rate of the enzyme-catalyzed turnover rates at the Rubisco site thus determine the overall photosynthesis","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"A_n = V_c - 05V_o - R_d","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"with V_c being the carboxylation rate, V_o the oxygenation rate and R_d the mitochondrial respiration. Both rates follow Michaelis-Menten kinetics, accounting for the competing substrate effects:","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"V_c = fracV_cmaxC_cC_c+K_c(1+O_cK_o)","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"V_o = fracV_omaxO_cO_c+K_o(1+C_cK_c)","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"with K_c and K_o being the Michaelis Menten constants for CO_2 and O_2, C_c and O_c the partial pressures of CO_2 and O_2 at the Rubisco site.","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"The ratio of oxygenation to carboxylation rates is","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"phi = fracV_oV_c = fracV_omaxK_cV_cmaxK_ofracO_cC_c","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"which yields the CO_2 compensation point Gamma_star:","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"Gamma_star = 05fracV_omaxK_cV_cmaxK_oO_c","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"with is the internal CO_2 partial pressure at which oxygenation and carboxylation cancel each other out in terms of CO_2 consumption and production (neglecting R_d).","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"[1]: Farquhar, G.D., von Caemmerer, S.V. and Berry, J.A., 1980. A biochemical model of photosynthetic CO_2 assimilation in leaves of C3 species. Planta, 149(1), pp.78-90.","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"[2]: Collatz, G.J., Ribas-Carbo, M. and Berry, J.A., 1992. Coupled photosynthesis-stomatal conductance model for leaves of C4 plants. Functional Plant Biology, 19(5), pp.519-538.","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"[3]: Bonan, G., 2019. Climate change and terrestrial ecosystem modeling. Cambridge University Press.","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"[4]: Calvin, Melvin, and Andrew Alm Benson. \"The path of carbon in photosynthesis IV: the identity and sequence of the intermediates in sucrose synthesis.\" Science 109, no. 2824 (1949): 140-142.","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"[5]: Benson, A.A., Bassham, J.A., Calvin, M., Goodale, T.C., Haas, V.A. and Stepka, W., 1950. The path of carbon in photosynthesis. v. paper chromatography and radioautography of the products1. Journal of the American Chemical Society, 72(4), pp.1710-1718.","category":"page"},{"location":"generated/Leaf-Photosynthesis/#Rate-Limiting-Steps-for-photosynthesis-1","page":"Leaf Level Basics","title":"Rate Limiting Steps for photosynthesis","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis/#Rubisco-limited-rates:-1","page":"Leaf Level Basics","title":"Rubisco-limited rates:","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"The net photosynthetic rate limited by Rubisco when RuBP re-generation is not constraining can thus be described as","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"A_n = left(1-fracGamma_starC_cright)V_c-R_d","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"which equals (now denoting A_c as the Rubisco limited rate):","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"A_c = frac(C_c-Gamma_star) V_cmaxC_c+K_c(1+O_cK_o)","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"which is implemented in our routines \"rubiscolimitedrate!\".","category":"page"},{"location":"generated/Leaf-Photosynthesis/#RuBP-regeration-limited-rates-(light-limited):-1","page":"Leaf Level Basics","title":"RuBP-regeration limited rates (light-limited):","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"RuBP is regenerated via the ligh reaction, which generates ATP and NADP to power this part of the Calvin-Benson-Bassham cycle. Without going into details of the NADPH or ATP requirements for regeneration, the rate of RuBP limited photosynthesis through light-powered electron transport J (µmol/m^2/s) is given as","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"A_j = underbracefracC_c-Gamma_starCc_textloss in photorespirationunderbracefracJC_c4C_c+8Gamma_star_textRuBP regeneration = fracJ(C_c-Gamma_star)4C_c+8Gamma_star","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"One can already see what the key difference between C3 and C4 photosynthesis is based on these set of equation for rubisco turnover and RuBP-regeneration limited rates. In C4 photosynthesis, C_c is typically only about 70% of the ambient CO_2 concentration as CO_2 has to diffuse through stomata and the mesophyll. For C4, a carbon accumulation mechanism uses a four-carbon organic acid (hence C4) to transport CO_2 from the mesophyll cells to the bundle sheath cells, where the reaction with Rubisco takes place. This leads to much higher C_c for C4 plants ( than ambient air CO_2), which is often simplified for A_c as the limit of C3 equation with lim_C_c to infty Ac(C3):","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"A_c^C4 = V_cmax","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"Similarly, the RuBP-regeneration limited rate simplifies to:","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"A_j^C4 = alpha J","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"with a slightly lower efficiency alpha for C4 photosynthesis compared to C3 (as the carbon accumulation mechanism also consumes ATP). In reality, the situation is somewhat more complex and there are different approximations for Rubisco and RuBP limited rate constants. A comprehensive overview is described in von Caemmerer [6]. Again, our goal is to provide a flexible framework for photosynthesis modeling, so different implementations of rate limiting steps A_cA_j can be used in a modular framework (achieved through code abstraction and multiple dispatch in Julia).","category":"page"},{"location":"generated/Leaf-Photosynthesis/#Electron-Transport-Rate-J-1","page":"Leaf Level Basics","title":"Electron Transport Rate J","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"The rate of electron transport is driven by absorbed photosynthetically absorbed radiation (APAR, mu molm^2s) by Photosystem II (PSII). With our leaf level optical model, we already compute the efficiency of absorbtion by leaves depending on pigment contents. We define varphi_PSII as the quantum yield of photosystem II (maxima about 0.83) and f_PSII the fraction of light used for PSII (PSII/(PSI+PSII)), typically assume to be 0.5.","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"J_PSII = f_PSII varphi_PSII APAR","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"In most models, a maximum electron transport J_max rate is assumed and the actual electron trapsort rate J_a is defined as the lower root of the quadratic expression","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"Theta_j J_a^2 -(J_PSII+J_max)+ J_PSIIJ_max = 0","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"where Theta_j is a curvature parameter to assure a smooth transition.","category":"page"},{"location":"generated/Leaf-Photosynthesis/#Product-limited-rates:-1","page":"Leaf Level Basics","title":"Product limited rates:","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"Typically, a thrid limitation of photosynthesis is being used as well, which we denote as product limited rate here, even though the processes for C3 and C4 plants differ. Typically, the export of the products of photosynthesis (triose phosphates) in the synthesis of sugars can be rate limiting, which is often parameterized by V_cmax:","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"A_p = a V_cmax","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"where our standard definition for C3 used a=0.5, which rarely limits photosynthesis compared to A_c and A_j.","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"For C4 plants, we use the PEP-carboxylase CO_2 concentration mechanism into the bundle sheath cell as product limited rate step, using Michaelis-Menten kinetics:","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"A_p^C4 = fracV_pmaxC_cC_c + K_p","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"with corresponding Michaelis Menten constant K_p and maximal rates V_pmax.","category":"page"},{"location":"generated/Leaf-Photosynthesis/#Total-rate:-1","page":"Leaf Level Basics","title":"Total rate:","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"The gross photosynthetic rate A_g can then be define as the mininum of all possible limitations:","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"A_g = min(AcAjAp)","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"or, alternatively, using quadratic equations as for J, which provides smoother transitions and co-limitation to some degree (both are options in our setup with a user defined curvature parameter Theta.","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"Net leaf photosynthesis includes mitochondrial respiration as well:","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"A_n = A_g - R_d","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"[6]: Von Caemmerer, S., 2000. Biochemical models of leaf photosynthesis. Csiro publishing.","category":"page"},{"location":"generated/Leaf-Photosynthesis/#Simple-example:-1","page":"Leaf Level Basics","title":"Simple example:","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"We just want to lay out a first simple example as to how our model setup work:","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"# Loading the Photosynthesis model:\nusing Revise\nusing Land.Photosynthesis\n# Defining our Field Type (we can easily switch between Double and Float precision this way)\nconst FT = Float32;\nnothing #hide","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"# Create a standard leaf with defualt parameters\nleaf = leaf_params{FT}();\n\n# Create a standard meteo structure:\nmet = meteo{FT}();\nnothing #hide","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"How to use the documentation, what do we know about leaf_params, which stores most physiologically relevant parameters. (Not printed here, try in the command line!).","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"?leaf_params","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"?meteo","category":"page"},{"location":"generated/Leaf-Photosynthesis/#Defining-the-model-setup-1","page":"Leaf Level Basics","title":"Defining the model setup","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"The most important step is to define which submodules to use. There might be different implementations for Fluorescence, Photosynthesis (C3,C4,etc), respiration, stomatal conductance (e.g. Ball-Berry, Medlyn), the T-dependence of J_max, V_cmax and Michaelis Menten constants as well as leaf boundary layer resistance (setting it to 0 here to mimic well vented laboratory leaf level measurements) and colimitation.","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"##Here, we just have to worry abou the photosynthesis module, which we set here:\nmod_photo = C3FvCBPhoto()\n\n# All modules here:\nmods = Photosynthesis.PhotoMods(\n    fluorescence    = FlexasTolBerryFluorescence{FT}(),\n    photosynthesis  = C3FvCBPhoto(),\n    respiration     = RespirationCLM{FT}(),\n    stomatal        = BallBerryStomata{FT}(g1=8),\n    Jmax            = JmaxCLM{FT}(),\n    Vmax            = VcmaxCLM{FT}(),\n    MichaelisMenten = MM_CLM{FT}(),\n    BoundaryLayer   = FixedBoundaryResistance{FT}(ra=0),\n    colimitation = CurvedColimit{FT}(0.99));\nnothing #hide","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"# Set APAR to 250 $\\mu mol/m^2/s$\nleaf.APAR = 250;\n# Set temperature to 290K\nleaf.T = 290;\n# Applying the T-correction for all rate constants:\nPhotosynthesis.set_leaf_temperature!(mods, leaf)\n@show leaf.Vcmax\n@show leaf.Jmax\n# Specify Cc directly here in ppm (will be converted to Pa internally)\nleaf.Cc = 350;\nnothing #hide","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"Aj = Photosynthesis.light_limited_rate!(mod_photo, leaf, met, leaf.APAR)","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"Ac = Photosynthesis.rubisco_limited_rate!(mod_photo, leaf, met)","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"Ap = Photosynthesis.product_limited_rate!(mod_photo, leaf, met)","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"","category":"page"},{"location":"generated/Leaf-Photosynthesis/#Summary-1","page":"Leaf Level Basics","title":"Summary","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"This was the simplest example to compute A_c, A_j and A_p with a specified C_c and APAR. In reality, C_c is defined by the interplay of photosynthetic demand and the supply through diffusion through stomata and the mesophyll. However, you can easily exchange the photosynthesis model above with C4FvCBPhoto(). You can also play around with leaf temperature T and APAR as well as C_c.","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"?C3FvCBPhoto","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"?C4CollatzPhoto","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"","category":"page"},{"location":"generated/Leaf-Photosynthesis/#","page":"Leaf Level Basics","title":"Leaf Level Basics","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"EditURL = \"https://github.com/CliMA/Land/blob/master/notebooks/Radiation_Test_BRDF.jl\"","category":"page"},{"location":"generated/Radiation_Test_BRDF/#Canopy-Radiative-Transfer-Example-#1-1","page":"Reflected and Emitted Radiance","title":"Canopy Radiative Transfer Example #1","text":"","category":"section"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"This example will go through the calculations of hemispheric and bidirectional reflectance as well as emission of Solar Induced Chlorophyll Fluorescence (SIF). The sun sensor geometry is defined by the solar zenith angle SZA, the viewing zenith angle VZA (observer, 0degrees=Nadir looking) and the relative azimuth angle between the sun and observer (0 or 180degrees denoting the principal plane).","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"# Use Julia Plots package and switch to plotly js option:\nusing Plots\npyplot()","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"First, we include Revise (good for debugging) and Parameters (tools for structures)","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"#using Revise\nusing Parameters","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"Now include the Land modules","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"using Land\nusing Land.CanopyRT","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"and unpack some of the mostly used variables or structure (same as writing CanopyRT.leafbio)","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"#@unpack FT, leafbio, canopy, angles, canOpt, canRad,sunRad,soil, wl, wle, wlf = CanopyRT","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"This extracted a number of structures, which are loaded with default values at startup:","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"leafbio includes all leaf pigment concentrations, such as Chlorophyll, leaf water, Carotenoids and dry matter content. (mutable struct leafbio)\ncanopy includes Canopy properties such as LAI, leaf inclination distribution, clumping factor (mutable struct struct_canopy)\nangles includes SZA, VZA and azimuth (mutable struct struct_angles)\ncanOpt saves a variety of canopy optical properties to be computed (mutable struct struct_canopyOptProps)\ncanRad includes radiation computed within the Canopy RT module (mutable struct struct_canopyRadiation)\nsunRad provides incoming direct and diffuse incoming solar radiation (mutable struct incomingRadiation)\nsoil provides soil albedo and skin temperature","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"as well as some arrays:","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"wl is the wavelength grid (nm) for the solar radiation computation\nwle is the wavelength grid in the photosynthetically active range (a subset of wl, used to define fluorescence excitation and driving photosynthesis)\nwlf is the wavelength grid for SIF (subset of wl). The fluorescence excitation matrices are defined on the basis of wle and wlf.","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"Let us just define our own leaf here, we can construct it using standard values but need to provide all dimensions (will be fixed as variables are saved in MArrays):","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"leaf = leafbio{FT, length(wl), length(wle), length(wlf),length(wle)*length(wlf)}();\n# show leaf Chlorophyll content:\n@show leaf.Cab","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"","category":"page"},{"location":"generated/Radiation_Test_BRDF/#Leaf-Optical-Properties-1","page":"Reflected and Emitted Radiance","title":"Leaf Optical Properties","text":"","category":"section"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"Now we can first run fluspect, which is an extension of the Prospect leaf optical properties program and includes computations of the fluorescence emission responses as well. CanopyRT.optis includes all pigment absorption cross sections as well as refractive index of water to compute leaf optical properties. For details, see:","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"Féret, J.B., Gitelson, A.A., Noble, S.D. and Jacquemoud, S., 2017. PROSPECT-D: Towards modeling leaf optical properties through a complete lifecycle. Remote Sensing of Environment, 193, pp.204-215.","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"Van der Tol, C., Verhoef, W., Timmermans, J., Verhoef, A. and Su, Z., 2009. An integrated model of soil-canopy spectral radiances, photosynthesis, fluorescence, temperature and energy balance. Biogeosciences, 6(12).","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"Vilfan, N., Van der Tol, C., Muller, O., Rascher, U. and Verhoef, W., 2016. Fluspect-B: A model for leaf fluorescence, reflectance and transmittance spectra. Remote sensing of environment, 186, pp.596-615.","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"# Run Fluspect:\nCanopyRT.fluspect!(leaf, CanopyRT.optis);\nnothing #hide","category":"page"},{"location":"generated/Radiation_Test_BRDF/#Fluorescence-excitation-matrices-1","page":"Reflected and Emitted Radiance","title":"Fluorescence excitation matrices","text":"","category":"section"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"Now we can visualize the fluorescence excitatiom matrices, which determine how absorbed photons at a specific wavelength wle incident on the leaf are emitted backwards (in relation to the incident light but hemispherically diffuse here) or forward. Here, we ignore contributions from Photosystem I and just use a fixed shape as input at the chloroplast level for Photosystem II, hence all spectral shapes are determined by the light distribution within the leaf. Several effects can be observed in the plots below: The first SIF peak at 680nm is much weaker in the forward direction than in the backward direction as more the re-absorption within the leaf is much higher for the forward direction. Similarly, blue incident light penetrates the leaf less than at higher wavelengths, so the chlorophyll re-absorption (backwards) is less re-absorbed by chlorophyll as it emanates from less deep layers.","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"# Plot Mb matrix\ncontourf(wle, wlf, leaf.Mb)\nxlabel!(\"Excitation wavelength (nm)\")\nylabel!(\"Emission wavelength (nm)\")\ntitle!(\"Fluorescence backward (refl) emission (Mb)\")","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"# Plot Mf matrix\ncontourf(wle, wlf, leaf.Mf)\nxlabel!(\"Excitation wavelength (nm)\")\nylabel!(\"Emission wavelength (nm)\")\ntitle!(\"Fluorescence forward (transmission) emission (Mf)\")","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"# Define a few wavelengths:\nwl_blue = 450.0;\nwl_red = 600.0;\nwl_FarRed = 740.0;\nwl_Red = 685.0;\nind_wle_blue  = argmin(abs.(wle .-wl_blue));\nind_wle_red = argmin(abs.(wle .-wl_red));\nind_wlf_FR  = argmin(abs.(wlf .-wl_FarRed));\nind_wlf_R  = argmin(abs.(wlf .-wl_Red));\nind_red = argmin(abs.(wl .-wl_Red));\nind_NIR = argmin(abs.(wl .-800));\nnothing #hide","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"# Plot some cross section in wle and wlf space:\nplot(wlf,leaf.Mf[:,ind_wle_blue], color=[:black], lw = 2 , label=\"Forward SIF, excited at $wl_blue nm\")\nplot!(wlf,leaf.Mb[:,ind_wle_blue],color=[:orange], lw = 2 , label=\"Backward SIF, excited at $wl_blue nm\" )\nplot!(wlf,leaf.Mf[:,ind_wle_red], color=[:black],line=(:dash,2), label=\"Forward SIF, excited at $wl_red nm\" )\nplot!(wlf,leaf.Mb[:,ind_wle_red], color=[:orange],line=(:dash,2), label=\"Backward SIF, excited at $wl_red nm\" )\nxlabel!(\"Wavelength (nm)\")\nylabel!(\"Fluorescence\")","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"# Plot some cross section in wle and wlf space:\nplot(wle,leaf.Mf[ind_wlf_FR,:], color=[:black], lw = 2 , label=\"Forward SIF, emitted at $wl_FarRed nm\")\nplot!(wle,leaf.Mb[ind_wlf_FR,:],color=[:orange], lw = 2 , label=\"Backward SIF, emitted at $wl_FarRed nm\" )\nplot!(wle,leaf.Mf[ind_wlf_R,:], color=[:black],line=(:dash,2), label=\"Forward SIF, emitted at $wl_Red nm\" )\nplot!(wle,leaf.Mb[ind_wlf_R,:], color=[:orange],line=(:dash,2), label=\"Backward SIF, emitted at $wl_Red nm\" )\nxlabel!(\"Absorbed Wavelength (nm)\")\nylabel!(\"Fluorescence\")","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"","category":"page"},{"location":"generated/Radiation_Test_BRDF/#Leaf-reflectance-and-transmission-1","page":"Reflected and Emitted Radiance","title":"Leaf reflectance and transmission","text":"","category":"section"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"Within Fluspect, leaf reflectance and transmission is calculated (this part is actually identical to what PROSPECT is doing and much less involved than the Fluorescence part). The model basically uses a doubling adding routine to solve for the radiative transfer within the leaf using constituent absorption cross sections and constituent abundances in the leaf (assuming vertically homogenous distribution).","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"Here, we just create another leaf with different concentrations to show the impact on leaf reflectance and transmission due to changes in chlorophyll content and liquid water content (mostly in the two liquid water absorption bands at 1400 and 1900nm).","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"# Let's create a leaf with a different Cab and Cw (water) content (<span style=\"color:red\">Try changing other pigment contents, plot leaf reflectance and transmissions and explain where (spectrally) and why reflectance and transmission changes</span>):\nleaf_2 = leafbio{FT, length(wl), length(wle), length(wlf),length(wle)*length(wlf)}();\nleaf_2.Cab = 80\nleaf_2.Cw = 0.012\n# show leaf Chlorophyll content:\n# and Run Fluspect:\nCanopyRT.fluspect!(leaf_2, CanopyRT.optis);\nnothing #hide","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"plot(wl,1 .-leaf.τ_SW, color=[:black], lw = 2 , label=\"Leaf Transmission\")\nplot!(wl,leaf.ρ_SW,color=[:orange], lw = 2 , label=\"Leaf Reflectance\" )\nplot!(wl,1 .-leaf_2.τ_SW, color=[:black], line=(:dash,2), label=\"Leaf ##2 Transmission\")\nplot!(wl,leaf_2.ρ_SW,color=[:orange], line=(:dash,2), label=\"Leaf ##2 Reflectance\" )\nxlabel!(\"Wavelength (nm)\")","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"","category":"page"},{"location":"generated/Radiation_Test_BRDF/#Moving-from-the-leaf-to-the-entire-canopy-1","page":"Reflected and Emitted Radiance","title":"Moving from the leaf to the entire canopy","text":"","category":"section"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"Our model here is based on mSCOPE[1] and we can prescribe different leaf optical properties within a complex canopy. At the moment, the leaf angular distribution is the same vertically (but could be changed in the future).","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"[1]: Yang, P., Verhoef, W. and van der Tol, C., 2017. The mSCOPE model: A simple adaptation to the SCOPE model to describe reflectance, fluorescence and photosynthesis of vertically heterogeneous canopies. Remote sensing of environment, 201, pp.1-11.","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"# This is to be changed later but at the moment, we need to generate an Array of leaves, basically for each layer of the canopy\narrayOfLeaves = Array{leafbio{FT,length(wl), length(wle), length(wlf),length(wle)*length(wlf)}, 1}(undef, CanopyRT.canopy.nlayers)\nfor i = 1:CanopyRT.canopy.nlayers\n    ##@show i\n    arrayOfLeaves[i] = leafbio{FT, length(wl), length(wle), length(wlf),length(wle)*length(wlf)}()\n    CanopyRT.fluspect!(arrayOfLeaves[i], CanopyRT.optis)\nend","category":"page"},{"location":"generated/Radiation_Test_BRDF/#Basic-Steps-for-Canopy-RT:-1","page":"Reflected and Emitted Radiance","title":"Basic Steps for Canopy RT:","text":"","category":"section"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"Below are the basic steps for the canopy radiative transfer (SIF fluxes are dependent on stress levels at each leaf but here we use a standard SIF yield for now):","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"# Set Soil albedo to 0.2\nCanopyRT.soil.albedo_SW[:] .=0.2;\n# Compute Canopyoptical properties dependend on sun-sensor and leaf angle distributions:\nCanopyRT.computeCanopyGeomProps!(canopy, angles,canOpt);\n# Compute RT matrices with leaf reflectance and transmissions folded in:\nCanopyRT.computeCanopyMatrices!(arrayOfLeaves,canOpt);\n# Perform SW radiation transfer:\nCanopyRT.RTM_SW!(canopy, canOpt, canRad,sunRad, CanopyRT.soil);\n# Compute outgoing SIF flux (using constant fluorescence efficiency at the chloroplast level)\nCanopyRT.computeSIF_Fluxes!(arrayOfLeaves, canOpt, canRad, canopy, CanopyRT.soil);\nnothing #hide","category":"page"},{"location":"generated/Radiation_Test_BRDF/#Test-a-VZA-dependence-in-the-principal-plane-1","page":"Reflected and Emitted Radiance","title":"Test a VZA dependence in the principal plane","text":"","category":"section"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"SIF_FR = Float32[]\nSIF_R = Float32[]\nreflVIS = Float32[]\nreflNIR = Float32[]\n\n# Just running the code over all geometries:\n\n# Set sun SZA to 30 degrees\nCanopyRT.angles.tts=30\n# Set 0 azimuth (principal plane)\nCanopyRT.angles.psi=0\n# LAI of 3:\nCanopyRT.canopy.LAI = 3\n# Define VZA\nVZA=collect(-89.5:0.5:89.5)\n\nfor VZA_ in VZA\n    CanopyRT.angles.tto=VZA_\n    CanopyRT.computeCanopyGeomProps!(canopy, angles,canOpt);\n    CanopyRT.computeCanopyMatrices!(arrayOfLeaves,canOpt);\n    CanopyRT.RTM_SW!(canopy, canOpt, canRad,sunRad, CanopyRT.soil);\n    CanopyRT.computeSIF_Fluxes!(arrayOfLeaves, canOpt, canRad, canopy, CanopyRT.soil);\n    # Handpicked indices in\n    push!(reflVIS, canRad.alb_obs[ind_red])\n    push!(reflNIR, canRad.alb_obs[ind_NIR])\n    push!(SIF_R , canRad.SIF_obs[ind_wlf_R])\n    push!(SIF_FR, canRad.SIF_obs[ind_wlf_FR ])\nend","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"# Plots Visible\nplot(VZA, reflVIS, label=\"Red Reflectance\", lw=2)\nplot!(VZA, SIF_R/30, label=\"Red SIF (/30)\", lw=2)\nxlabel!(\"Viewing Zenith Angle\")","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"# Plot Near Infrared:\nplot(VZA, reflNIR, label=\"NIR Reflectance\", lw=2)\nplot!(VZA, SIF_FR/6, label=\"Far Red SIF (/6)\", lw=2)\nxlabel!(\"Viewing Zenith Angle\")","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"","category":"page"},{"location":"generated/Radiation_Test_BRDF/#BRDF-sampling-1","page":"Reflected and Emitted Radiance","title":"BRDF sampling","text":"","category":"section"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"By going through viewing and azimuth angles, we can construct a full BRDF for reflectance and SIF emissions at different wavelengths:","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"reflVIS = Float32[]\nreflNIR = Float32[]\nSIF_FR = Float32[]\nSIF_R  = Float32[]\nCanopyRT.angles.tts=48\nCanopyRT.angles.psi=0\nCanopyRT.canopy.LAI=3.22\nfor psi=0:360\n    CanopyRT.angles.psi=psi\n    for VZA=0:1:85\n        CanopyRT.angles.tto=VZA\n\n        CanopyRT.computeCanopyGeomProps!(canopy, angles,canOpt);\n        CanopyRT.computeCanopyMatrices!(arrayOfLeaves,canOpt);\n        CanopyRT.RTM_SW!(canopy, canOpt, canRad,sunRad, CanopyRT.soil);\n        CanopyRT.computeSIF_Fluxes!(arrayOfLeaves, canOpt, canRad, canopy, CanopyRT.soil);\n        push!(reflVIS, canRad.alb_obs[28])\n        push!(reflNIR, canRad.alb_obs[52])\n        push!(SIF_R , canRad.SIF_obs[8])\n        push!(SIF_FR, canRad.SIF_obs[20])\n    end\nend","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"A = reshape(reflNIR, ( 86,361));\nB = reshape(reflVIS, ( 86,361));\nSIFFER = reshape(SIF_R, ( 86,361));\nSIFFER_FR = reshape(SIF_FR, ( 86,361));\nnothing #hide","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"##heatmap(A, cmap=)\nhm = contourf(deg2rad.(collect((0:360))),collect(0:1:85),  A,  proj=:polar, color=:viridis, alpha=0.5)\ntitle!(\"NIR reflectance BRDF\")","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"##heatmap(A, cmap=)\nhm = contourf(deg2rad.(collect((0:360))),collect(0:1:85),  B,  proj=:polar, color=:viridis)\ntitle!(\"VIS reflectance BRDF\")","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"hm = contourf(deg2rad.(collect((0:360))),collect(0:1:85),  SIFFER, proj=:polar, color=:viridis)\ntitle!(\"Red SIF emission BRDF\")","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"hm = contourf(deg2rad.(collect((0:360))),collect(0:1:85),  SIFFER_FR, proj=:polar, color=:viridis)\ntitle!(\"Far Red SIF emission BRDF\")","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"","category":"page"},{"location":"generated/Radiation_Test_BRDF/#","page":"Reflected and Emitted Radiance","title":"Reflected and Emitted Radiance","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/GSV_soil_model/#","page":"Soil reflectance","title":"Soil reflectance","text":"EditURL = \"https://github.com/CliMA/Land/blob/master/notebooks/GSV_soil_model.jl\"","category":"page"},{"location":"generated/GSV_soil_model/##-GSV:-a-general-model-for-hyperspectral-soil-reflectance-simulation-1","page":"Soil reflectance","title":"# GSV: a general model for hyperspectral soil reflectance simulation","text":"","category":"section"},{"location":"generated/GSV_soil_model/#","page":"Soil reflectance","title":"Soil reflectance","text":"Soil reflectance is crucial for canopy radiative transfer modeling. Spectral vector models are more flexible than typical soil albedo models, because they can ingest observed data and significantly improves hyperspectral soil reflectance modeling in terms of accuracy and robustness.","category":"page"},{"location":"generated/GSV_soil_model/#","page":"Soil reflectance","title":"Soil reflectance","text":"We demonstrate the usage of the general spectral vectors (GSV) model[1] developed to employ three dry spectral vectors and one humid spectral vector derived from global dry and humid soil reflectance databases including 23,871 soil spectra (400–2500 nm). The GSV model accurately simulates global soil reflectance with an R2 of 0.99 and RMSE of 0.01. The GSV model is highly suitable to be coupled with the CliMA model for vegetation remote sensing studies.","category":"page"},{"location":"generated/GSV_soil_model/#","page":"Soil reflectance","title":"Soil reflectance","text":"[1]: Jiang, C., & Fang, H. (2019). GSV: a general model for hyperspectral soil reflectance simulation. International Journal of Applied Earth Observation and Geoinformation, 83(July), 101932. https://doi.org/10.1016/j.jag.2019.101932","category":"page"},{"location":"generated/GSV_soil_model/#Load-used-packages-1","page":"Soil reflectance","title":"Load used packages","text":"","category":"section"},{"location":"generated/GSV_soil_model/#","page":"Soil reflectance","title":"Soil reflectance","text":"#### Use Julia Plots package and switch to plotly js option:\nusing Plots\nusing StatsPlots\npyplot()\n\n##----------------------------------------------------------------------------\n\n# First, we include Revise (good for debugging) and Parameters (tools for structures)\n\n##using Revise\nusing Parameters\nusing Statistics\nusing CSV\nusing DataStructures\n\n##----------------------------------------------------------------------------\nusing LinearAlgebra","category":"page"},{"location":"generated/GSV_soil_model/#Define-used-variables-1","page":"Soil reflectance","title":"Define used variables","text":"","category":"section"},{"location":"generated/GSV_soil_model/#","page":"Soil reflectance","title":"Soil reflectance","text":"# The hyperspectral wavelengths\nWVL = 400:10:2501\n# The general spectral vectors derived in the manuscript\nGSV = [CSV.read(\"DryVec.csv\"; header=false);CSV.read(\"SMVec.csv\"; header=false)]\n# The test hyperspectral data\nhyper = CSV.read(\"TestSpectrum_v1.csv\";header=false)\n# The wavelengths of multispectral data\nwvl = [450,550,650,850,1650,2150]\n# The test multispectral data sliced from hyperspectral data\nindices = []\n\nfor i in wvl\n    push!(indices, findall(x -> x==i, WVL)[1])\nend\n\nmulti = hyper[:,indices]\n\n\n# Step 1: slice GSV according to the wavelengths of multispectral data\ngsv = GSV[:,indices]","category":"page"},{"location":"generated/GSV_soil_model/#Define-plot-1","page":"Soil reflectance","title":"Define plot","text":"","category":"section"},{"location":"generated/GSV_soil_model/#","page":"Soil reflectance","title":"Soil reflectance","text":"# Step 2: fit multispectral soil reflectance and reconstruct multispectral soil reflectance\nX=convert(Matrix,multi)\nV=convert(Matrix,gsv)\nC = X * LinearAlgebra.pinv(V)\nR = C * V\nR[R.<0] .= 0\nR[R.>1] .= 1","category":"page"},{"location":"generated/GSV_soil_model/#","page":"Soil reflectance","title":"Soil reflectance","text":"scatter(X,R,label=\"\")\nplot!([0,0.4],[0,0.4],label=\"\")\nylabel!(\"Simulations\")\nxlabel!(\"Measurements\")","category":"page"},{"location":"generated/GSV_soil_model/#","page":"Soil reflectance","title":"Soil reflectance","text":"# Step 3: reconstruct hyperspectral soil reflectance using coefficients fitted from multispectral data\nX = convert(Matrix,hyper)\nV = convert(Matrix,GSV)\nR = C * V\nR[R.<0] .= 0\nR[R.>1] .= 1","category":"page"},{"location":"generated/GSV_soil_model/#","page":"Soil reflectance","title":"Soil reflectance","text":"scatter(X,R,label=\"\")\nplot!([0,0.4],[0,0.4],label=\"\")\nylabel!(\"Simulations\")\nxlabel!(\"Measurements\")","category":"page"},{"location":"generated/GSV_soil_model/#","page":"Soil reflectance","title":"Soil reflectance","text":"# Compare measured multispectral data and hyperspectral data with reconstructed ones\nplot(WVL,transpose(convert(Matrix,hyper)),label=\"Actual hyperspectral reflectance\")\nscatter!(wvl,transpose(Matrix(multi)),label=\"Observed multispectral reflectance\")\nplot!(WVL,transpose(R),label=\"Simulated hyperspectral reflectance\\nfitted from multispectral reflectance\")\nylabel!(\"Soil albedo\")\nxlabel!(\"wl (nm)\")","category":"page"},{"location":"generated/GSV_soil_model/#","page":"Soil reflectance","title":"Soil reflectance","text":"","category":"page"},{"location":"generated/GSV_soil_model/#","page":"Soil reflectance","title":"Soil reflectance","text":"This page was generated using Literate.jl.","category":"page"},{"location":"photosynthesis_models/#PHOTOSYNTHESIS-MODELS-MODULE-1","page":"PhotosynthesisModels Module","title":"PHOTOSYNTHESIS MODELS MODULE","text":"","category":"section"},{"location":"photosynthesis_models/#Temperature-Dependency-1","page":"PhotosynthesisModels Module","title":"Temperature Dependency","text":"","category":"section"},{"location":"photosynthesis_models/#Jmax-1","page":"PhotosynthesisModels Module","title":"Jmax","text":"","category":"section"},{"location":"photosynthesis_models/#","page":"PhotosynthesisModels Module","title":"PhotosynthesisModels Module","text":"Land.PhotosynthesisModels.get_jmax\nLand.PhotosynthesisModels.get_j\nLand.PhotosynthesisModels.JmaxTDBernacchi\nLand.PhotosynthesisModels.JmaxTDCLM\nLand.PhotosynthesisModels.JmaxTDLeuning","category":"page"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.get_jmax","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.get_jmax","text":"get_jmax(para_set::AbstractJmaxTD, j25::FT, t_leaf::FT)\n\nMaximal electron transport rate at leaf temperature, given\n\npara_set AbstractJmax parameter set\nj25 Maximal electron transport rate at 298.15 K\nt_leaf Leaf temperature\n\n\n\n\n\n","category":"function"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.get_j","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.get_j","text":"get_j(jmax::FT, par::FT, curvature::FT, qy::FT)\n\nElectron transport rate j, given\n\njmax Maximal eclectron transport @ leaf temperature (not 298.15 K)\npar Absorbed PAR (photosynthetic active radiation)\ncurvature Curvature parameter (default at 0.9)\nqy Quantum yield of electron, qy = maxPSII * PSII_frac, maxPSII is maximal PSII yield (default at 4.0/4.9), PSII_frac is Fraction of absorbed light used by PSII ETR (default at 0.5)\n\n\n\n\n\n","category":"function"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.JmaxTDBernacchi","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.JmaxTDBernacchi","text":"JmaxTDBernacchi{FT} <:AbstractJmaxTD\n\nA non-mutable AbstractJmaxTD type JmaxTDBernacchi that stores information for Jmax temperature correction. The equation used for temperature correction is Arrhenius equation (See Leuning (2002) \"Leuning, R. \"Temperature dependence of two parameters in a photosynthesis model\"). The data source for the constants can be referred from \"\".\n\nFields\n\nΔHa_to_RT25\nRatio between ΔHa and R*K_25\nΔHd_to_R\nRatio between ΔHd and R\nΔSv_to_R\nRatio between ΔSv and R\nC\nCorrection factor C = 1 + exp( Sv/R + Hd/(RT0) )\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.JmaxTDCLM","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.JmaxTDCLM","text":"JmaxTDCLM{FT} <:AbstractJmaxTD\n\nA non-mutable AbstractJmaxTD type JmaxTDCLM that stores information for Jmax temperature correction. The equation used for temperature correction is Arrhenius equation (See Leuning (2002) \"Leuning, R. \"Temperature dependence of two parameters in a photosynthesis model\"). The data source for the constants can be referred from \"\".\n\nFields\n\nΔHa_to_RT25\nRatio between ΔHa and R*K_25\nΔHd_to_R\nRatio between ΔHd and R\nΔSv_to_R\nRatio between ΔSv and R\nC\nCorrection factor C = 1 + exp( Sv/R + Hd/(RT0) )\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.JmaxTDLeuning","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.JmaxTDLeuning","text":"JmaxTDLeuning{FT} <:AbstractJmaxTD\n\nA non-mutable AbstractJmaxTD type JmaxTDLeuning that stores information for Jmax temperature correction. The equation used for temperature correction is Arrhenius equation (See Leuning (2002) \"Leuning, R. \"Temperature dependence of two parameters in a photosynthesis model\"). The data source for the constants can be referred from Leuning (2002).\n\nFields\n\nΔHa_to_RT25\nRatio between ΔHa and R*K_25\nΔHd_to_R\nRatio between ΔHd and R\nΔSv_to_R\nRatio between ΔSv and R\nC\nCorrection factor C = 1 + exp( Sv/R + Hd/(RT0) )\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Kc-1","page":"PhotosynthesisModels Module","title":"Kc","text":"","category":"section"},{"location":"photosynthesis_models/#","page":"PhotosynthesisModels Module","title":"PhotosynthesisModels Module","text":"Land.PhotosynthesisModels.get_kc\nLand.PhotosynthesisModels.KcTDBernacchi\nLand.PhotosynthesisModels.KcTDCLM","category":"page"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.get_kc","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.get_kc","text":"get_kc(para_set::AbstractKc, t_leaf::FT)\n\nKc at leaf temperature, given\n\npara_set One AbstractKc type that store temperature correction information\nt_leaf Leaf temperature\n\n\n\n\n\n","category":"function"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.KcTDBernacchi","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.KcTDBernacchi","text":"KcTDBernacchi{FT} <: AbstractKcTD\n\nA non-mutable AbstractKcTD type KcTDBernacchi that stores information for Kc temperature correction. The equation used for temperature correction is correction = exp( c - ΔHa/(R*T_leaf) ). The data source for the constants can be referred from Bernacchi et al. (2001) \"Improved temperature response functions for models of Rubisco‐limited photosynthesis\".\n\nFields\n\nKc\nKc at 298.15 K (404.9 ppm) [Pa]\nΔHa_to_R\nRatio between ΔHa and R [K]\nΔHa_to_RT25\nRatio between ΔHa and R*K-25\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.KcTDCLM","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.KcTDCLM","text":"KcTDCLM{FT} <: AbstractKcTD\n\nA non-mutable AbstractKcTD type KcTDCLM that stores information for Kc temperature correction. The equation used for temperature correction is correction = exp( c - ΔHa/(R*T_leaf) ). The data source for the constants can be referred from \"\".\n\nFields\n\nKc\nKc at 298.15 K [Pa]\nΔHa_to_R\nRatio between ΔHa and R [K]\nΔHa_to_RT25\nRatio between ΔHa and R*K-25\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Ko-1","page":"PhotosynthesisModels Module","title":"Ko","text":"","category":"section"},{"location":"photosynthesis_models/#","page":"PhotosynthesisModels Module","title":"PhotosynthesisModels Module","text":"Land.PhotosynthesisModels.get_ko\nLand.PhotosynthesisModels.KoTDBernacchi\nLand.PhotosynthesisModels.KoTDCLM","category":"page"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.get_ko","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.get_ko","text":"get_ko(para_set::AbstractKo, t_leaf::FT)\n\nKo at leaf temperature, given\n\npara_set One AbstractKo type that store temperature correction information\nt_leaf Leaf temperature\n\n\n\n\n\n","category":"function"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.KoTDBernacchi","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.KoTDBernacchi","text":"KoBernacchi{FT} <: AbstractKoTD\n\nA non-mutable AbstractKoTD type KoTDBernacchi that stores information for Ko temperature correction. The equation used for temperature correction is correction = exp( c - ΔHa/(R*T_leaf) ). The data source for the constants can be referred from Bernacchi et al. (2001) \"Improved temperature response functions for models of Rubisco‐limited photosynthesis\".\n\nFields\n\nKo\nKo at 298.15 K (278.4 ‰) [Pa]\nΔHa_to_R\nRatio between ΔHa and R [K]\nΔHa_to_RT25\nRatio between ΔHa and R*K-25\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.KoTDCLM","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.KoTDCLM","text":"KoTDCLM{FT} <: AbstractKoTD\n\nA non-mutable AbstractKoTD type KoTDCLM that stores information for Ko temperature correction. The equation used for temperature correction is correction = exp( c - ΔHa/(R*T_leaf) ). The data source for the constants can be referred from \"\".\n\nFields\n\nKo\nKo at 298.15 K [Pa]\nΔHa_to_R\nRatio between ΔHa and R [K]\nΔHa_to_RT25\nRatio between ΔHa and R*K-25\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Kpep-1","page":"PhotosynthesisModels Module","title":"Kpep","text":"","category":"section"},{"location":"photosynthesis_models/#","page":"PhotosynthesisModels Module","title":"PhotosynthesisModels Module","text":"Land.PhotosynthesisModels.get_kpep\nLand.PhotosynthesisModels.KpepTDBoyd\nLand.PhotosynthesisModels.KpepTDCLM","category":"page"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.get_kpep","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.get_kpep","text":"get_kpep(para_set::AbstractKpep, t_leaf::FT)\n\nKpep at leaf temperature, given\n\npara_set One AbstractKpep type that store temperature correction information\nt_leaf Leaf temperature\n\n\n\n\n\n","category":"function"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.KpepTDBoyd","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.KpepTDBoyd","text":"KpepTDBoyd{FT} <: AbstractKpepTD\n\nA non-mutable AbstractKpepTD type KpepTDBoyd that stores information for Kpep temperature correction. The equation used for temperature correction is correction = exp( c - ΔHa/(R*T_leaf) ). The data source for the constants can be referred from Boyd et al. (2001) \"Temperature responses of C4 photosynthesis: biochemical analysis of Rubisco, phosphoenolpyruvate carboxylase, and carbonic anhydrase in Setaria viridis.\"\n\nFields\n\nKpep\nKpep at 298.15 K [Pa]\nΔHa_to_R\nRatio between ΔHa and R [K]\nΔHa_to_RT25\nRatio between ΔHa and R*K-25\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.KpepTDCLM","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.KpepTDCLM","text":"KpepTDCLM{FT} <: AbstractKpepTD\n\nA non-mutable AbstractKpepTD type KpepTDCLM that stores information for Kpep temperature correction. The equation used for temperature correction is correction = exp( c - ΔHa/(R*T_leaf) ). The data source for the constants can be referred from \"\"\n\nFields\n\nKpep\nKpep at 298.15 K [Pa]\nΔHa_to_R\nRatio between ΔHa and R [K]\nΔHa_to_RT25\nRatio between ΔHa and R*K-25\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Respiration-1","page":"PhotosynthesisModels Module","title":"Respiration","text":"","category":"section"},{"location":"photosynthesis_models/#","page":"PhotosynthesisModels Module","title":"PhotosynthesisModels Module","text":"Land.PhotosynthesisModels.get_r\nLand.PhotosynthesisModels.RespirationTDBernacchi\nLand.PhotosynthesisModels.RespirationTDCLM","category":"page"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.get_r","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.get_r","text":"get_r(para_set::AbstractRespirationTD, r25::FT, t_leaf::FT)\n\nLeaf respiration rate r_leaf at leaf temperature, given\n\npara_set One AbstractRespirationTD type that store temperature correction information\nr25 Leaf respiration rate at 298.15 K (25 Celcius)\nt_leaf Leaf temperature\n\n\n\n\n\n","category":"function"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.RespirationTDBernacchi","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.RespirationTDBernacchi","text":"RespirationTDBernacchi{FT} <: AbstractRespirationTD\n\nA non-mutable AbstractRespirationTD type RespirationTDBernacchi that stores information for Respiration temperature correction. The equation used for temperature correction is correction = exp( c - ΔHa/(R*T_leaf) ). The data source for the constants can be referred from Bernacchi et al. (2001) \"Improved temperature response functions for models of Rubisco‐limited photosynthesis\".\n\nFields\n\nΔHa_to_R\nRatio between ΔHa and R [K]\nΔHa_to_RT25\nRatio between ΔHa and R*K-25\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.RespirationTDCLM","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.RespirationTDCLM","text":"RespirationTDCLM{FT} <: AbstractRespirationTD\n\nA non-mutable AbstractRespirationTD type RespirationTDCLM that stores information for Respiration temperature correction. The equation used for temperature correction is Arrhenius equation (see Leuning (2002) \"Leuning, R. \"Temperature dependence of two parameters in a photosynthesis model\"). The data source for the constants can be referred from \"\".\n\nFields\n\nΔHa_to_RT25\nRatio between ΔHa and R*K_25\nΔHd_to_R\nRatio between ΔHd and R\nΔSv_to_R\nRatio between ΔSv and R\nC\nCorrection factor C = 1 + exp( Sv/R + Hd/(RT0) )\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Vmax-1","page":"PhotosynthesisModels Module","title":"Vmax","text":"","category":"section"},{"location":"photosynthesis_models/#","page":"PhotosynthesisModels Module","title":"PhotosynthesisModels Module","text":"Land.PhotosynthesisModels.get_vmax\nLand.PhotosynthesisModels.VcmaxTDBernacchi\nLand.PhotosynthesisModels.VcmaxTDCLM\nLand.PhotosynthesisModels.VcmaxTDLeuning\nLand.PhotosynthesisModels.VomaxTDBernacchi\nLand.PhotosynthesisModels.VpmaxTDBoyd","category":"page"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.get_vmax","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.get_vmax","text":"get_vmax(v25::FT, para_set::AbstractVmaxTD, t_leaf::FT)\n\nMaximal electron transport rate at leaf temperature, given\n\npara_set AbstractVmaxTD parameter set\nv25 Maximal carboxylation rate at 298.15 K\nt_leaf Leaf temperature\n\n\n\n\n\n","category":"function"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.VcmaxTDBernacchi","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.VcmaxTDBernacchi","text":"VcmaxTDBernacchi{FT} <: AbstractVcmaxTD\n\nA non-mutable AbstractVcmaxTD type VcmaxTDBernacchi that stores information for Vcmax temperature correction. The equation used for temperature correction is correction = exp( c - ΔHa/(R*T_leaf) ). The data source for the constants can be referred from Bernacchi et al. (2001) \"Improved temperature response functions for models of Rubisco‐limited photosynthesis\".\n\nFields\n\nΔHa_to_R\nRatio between ΔHa and R [K]\nΔHa_to_RT25\nRatio between ΔHa and R*K-25\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.VcmaxTDCLM","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.VcmaxTDCLM","text":"VcmaxTDCLM{FT} <:AbstractVcmaxTD\n\nA non-mutable AbstractVcmaxTD type VcmaxTDCLM that stores information for Vcmax temperature correction. The equation used for temperature correction is Arrhenius equation (see Leuning (2002) \"Leuning, R. \"Temperature dependence of two parameters in a photosynthesis model\"). The data source for the constants can be referred from \"\".\n\nFields\n\nΔHa_to_RT25\nRatio between ΔHa and R*K_25\nΔHd_to_R\nRatio between ΔHd and R\nΔSv_to_R\nRatio between ΔSv and R\nC\nCorrection factor C = 1 + exp( Sv/R + Hd/(RT0) )\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.VcmaxTDLeuning","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.VcmaxTDLeuning","text":"VcmaxTDLeuning{FT} <:AbstractVcmaxTD\n\nA non-mutable AbstractVcmaxTD type VcmaxTDLeuning that stores information for Vcmax temperature correction. The equation used for temperature correction is Arrhenius equation (see Leuning (2002) \"Leuning, R. \"Temperature dependence of two parameters in a photosynthesis model\"). The data source for the constants can be referred from leuning (2002).\n\nFields\n\nΔHa_to_RT25\nRatio between ΔHa and R*K_25\nΔHd_to_R\nRatio between ΔHd and R\nΔSv_to_R\nRatio between ΔSv and R\nC\nCorrection factor C = 1 + exp( Sv/R + Hd/(RT0) )\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.VomaxTDBernacchi","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.VomaxTDBernacchi","text":"VomaxTDBernacchi{FT} <: AbstractVomaxTD\n\nA non-mutable AbstractVomaxTD type VomaxTDBernacchi that stores information for Vomax temperature correction. The equation used for temperature correction is correction = exp( c - ΔHa/(R*T_leaf) ). The data source for the constants can be referred from Bernacchi et al. (2001) \"Improved temperature response functions for models of Rubisco‐limited photosynthesis\".\n\nFields\n\nΔHa_to_R\nRatio between ΔHa and R [K]\nΔHa_to_RT25\nRatio between ΔHa and R*K-25\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.VpmaxTDBoyd","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.VpmaxTDBoyd","text":"VpmaxTDBoyd{FT} <: AbstractVpmaxTD\n\nA non-mutable AbstractVpmaxTD type VpmaxTDBoyd that stores information for Vomax temperature correction. The equation used for temperature correction is Arrhenius peak correction (see Leuning (2002) \"Leuning, R. \"Temperature dependence of two parameters in a photosynthesis model\"). The data source for the constants can be referred from Boyd et al. (2001) \"Temperature responses of C4 photosynthesis: biochemical analysis of Rubisco, phosphoenolpyruvate carboxylase, and carbonic anhydrase in Setaria viridis\".\n\nFields\n\nΔHa_to_RT25\nRatio between ΔHa and R*K_25\nΔHd_to_R\nRatio between ΔHd and R\nΔSv_to_R\nRatio between ΔSv and R\nC\nCorrection factor C = 1 + exp( Sv/R + Hd/(RT0) )\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Γ*-1","page":"PhotosynthesisModels Module","title":"Γ*","text":"","category":"section"},{"location":"photosynthesis_models/#","page":"PhotosynthesisModels Module","title":"PhotosynthesisModels Module","text":"Land.PhotosynthesisModels.get_Γ_star\nLand.PhotosynthesisModels.ΓStarTDBernacchi\nLand.PhotosynthesisModels.ΓStarTDCLM","category":"page"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.get_Γ_star","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.get_Γ_star","text":"get_Γ_star(paraset::AbstractΓStarTD, t_leaf::FT)\n\nΓ_star at leaf temperature, given\n\npara_set One AbstractΓStarTD type that store temperature correction information\nt_leaf Leaf temperature\n\n\n\n\n\n","category":"function"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.ΓStarTDBernacchi","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.ΓStarTDBernacchi","text":"ΓStarTDBernacchi{FT} <: AbstractΓStarTD\n\nA non-mutable AbstractΓStarTD type ΓStarTDBernacchi that stores information for Γstar temperature correction. The equation used for temperature correction is `correction = exp( c - ΔHa/(R*Tleaf) )`. The data source for the constants can be referred from Bernacchi et al. (2001) \"Improved temperature response functions for models of Rubisco‐limited photosynthesis\".\n\nFields\n\nΓ_star\nΓ_star at 298.15 K (42.75 ppm) [Pa]\nΔHa_to_R\nRatio between ΔHa and R [K]\nΔHa_to_RT25\nRatio between ΔHa and R*K-25\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.ΓStarTDCLM","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.ΓStarTDCLM","text":"ΓStarTDCLM{FT} <: AbstractΓStarTD\n\nA non-mutable AbstractΓStarTD type ΓStarTDCLM that stores information for Γstar temperature correction. The equation used for temperature correction is `correction = exp( c - ΔHa/(R*Tleaf) )`. The data source for the constants can be referred \"\".\n\nFields\n\nΓ_star\nΓ_star at 298.15 K [Pa]\nΔHa_to_R\nRatio between ΔHa and R [K]\nΔHa_to_RT25\nRatio between ΔHa and R*K-25\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Arrhenius-Correction-1","page":"PhotosynthesisModels Module","title":"Arrhenius Correction","text":"","category":"section"},{"location":"photosynthesis_models/#","page":"PhotosynthesisModels Module","title":"PhotosynthesisModels Module","text":"Land.PhotosynthesisModels.arrhenius_correction","category":"page"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.arrhenius_correction","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.arrhenius_correction","text":"arrhenius_correction(para_set::KcTDBernacchi{FT}, t_leaf::FT)\n\nA correction factor based on arrhenius's fitting procedure, given\n\npara_set A KcTDBernacchi type parameter set\nt_leaf Leaf temperature in [K]\n\nThe equation used is correction = exp( c - ΔHa/(R*T_leaf) ).\n\n\n\n\n\narrhenius_correction(para_set::KcTDCLM{FT}, t_leaf::FT)\n\nA correction factor based on arrhenius's fitting procedure, given\n\npara_set A KcTDCLM type parameter set\nt_leaf Leaf temperature in [K]\n\nThe equation used is correction = exp( c - ΔHa/(R*T_leaf) ).\n\n\n\n\n\narrhenius_correction(para_set::KoTDBernacchi{FT}, t_leaf::FT)\n\nA correction factor based on arrhenius's fitting procedure, given\n\npara_set A KoTDBernacchi type parameter set\nt_leaf Leaf temperature in [K]\n\nThe equation used is correction = exp( c - ΔHa/(R*T_leaf) ).\n\n\n\n\n\narrhenius_correction(para_set::KoTDCLM{FT}, t_leaf::FT)\n\nA correction factor based on arrhenius's fitting procedure, given\n\npara_set A KoTDCLM type parameter set\nt_leaf Leaf temperature in [K]\n\nThe equation used is correction = exp( c - ΔHa/(R*T_leaf) ).\n\n\n\n\n\narrhenius_correction(para_set::KpepTDBoyd{FT}, t_leaf::FT)\n\nA correction factor based on arrhenius's fitting procedure, given\n\npara_set A KpepTDBoyd type parameter set\nt_leaf Leaf temperature in [K]\n\nThe equation used is correction = exp( c - ΔHa/(R*T_leaf) ).\n\n\n\n\n\narrhenius_correction(para_set::KpepTDCLM{FT}, t_leaf::FT)\n\nA correction factor based on arrhenius's fitting procedure, given\n\npara_set A KpepTDCLM type parameter set\nt_leaf Leaf temperature in [K]\n\nThe equation used is correction = exp( c - ΔHa/(R*T_leaf) ).\n\n\n\n\n\narrhenius_correction(para_set::RespirationTDBernacchi{FT}, t_leaf::FT)\n\nA correction factor based on arrhenius's fitting procedure, given\n\npara_set A RespirationTDBernacchi type parameter set\nt_leaf Leaf temperature in [K]\n\nThe equation used is correction = exp( c - ΔHa/(R*T_leaf) ).\n\n\n\n\n\narrhenius_correction(para_set::VcmaxTDBernacchi{FT}, t_leaf::FT)\n\nA correction factor based on arrhenius's fitting procedure, given\n\npara_set A VcmaxTDBernacchi type parameter set\nt_leaf Leaf temperature in [K]\n\nThe equation used is correction = exp( c - ΔHa/(R*T_leaf) ).\n\n\n\n\n\narrhenius_correction(para_set::VomaxTDBernacchi{FT}, t_leaf::FT)\n\nA correction factor based on arrhenius's fitting procedure, given\n\npara_set A VomaxTDBernacchi type parameter set\nt_leaf Leaf temperature in [K]\n\nThe equation used is correction = exp( c - ΔHa/(R*T_leaf) ).\n\n\n\n\n\narrhenius_correction(para_set::ΓStarTDBernacchi{FT}, t_leaf::FT)\n\nA correction factor based on arrhenius's fitting procedure, given\n\npara_set A ΓStarTDBernacchi type parameter set\nt_leaf Leaf temperature in [K]\n\nThe equation used is correction = exp( c - ΔHa/(R*T_leaf) ).\n\n\n\n\n\narrhenius_correction(para_set::ΓStarTDCLM{FT}, t_leaf::FT)\n\nA correction factor based on arrhenius's fitting procedure, given\n\npara_set A ΓStarTDCLM type parameter set\nt_leaf Leaf temperature in [K]\n\nThe equation used is correction = exp( c - ΔHa/(R*T_leaf) ).\n\n\n\n\n\narrhenius_correction(para_set::JmaxTDBernacchi{FT}, t_leaf::FT)\n\nArrhenius correction over Jmax, given\n\npara_set A JmaxTDBernacchi type parameter set\nt_leaf Leaf temperature\n\nThe equations used are f_above = C * exp [ ( Ha /RT_0 ) * ( 1 - T_0/T_1 ) ], f_below = 1 + exp [ ( Sv*T_1 - Hd ) / ( RT_1) ], C = 1 + exp[(Sv*T_0 - Hd )/(RT_0 )], and correction = f_above /f_below\n\n\n\n\n\narrhenius_correction(para_set::JmaxTDCLM{FT}, t_leaf::FT)\n\nArrhenius correction over Jmax, given\n\npara_set A JmaxTDCLM type parameter set\nt_leaf Leaf temperature\n\nThe equations used are f_above = C * exp [ ( Ha /RT_0 ) * ( 1 - T_0/T_1 ) ], f_below = 1 + exp [ ( Sv*T_1 - Hd ) / ( RT_1) ], C = 1 + exp[(Sv*T_0 - Hd )/(RT_0 )], and correction = f_above /f_below\n\n\n\n\n\narrhenius_correction(para_set::JmaxTDLeuning{FT}, t_leaf::FT)\n\nArrhenius correction over Jmax, given\n\npara_set A JmaxTDLeuning type parameter set\nt_leaf Leaf temperature\n\nThe equations used are f_above = C * exp [ ( Ha /RT_0 ) * ( 1 - T_0/T_1 ) ], f_below = 1 + exp [ ( Sv*T_1 - Hd ) / ( RT_1) ], C = 1 + exp[(Sv*T_0 - Hd )/(RT_0 )], and correction = f_above /f_below\n\n\n\n\n\narrhenius_correction(para_set::RespirationTDCLM{FT}, t_leaf::FT)\n\nArrhenius correction over Respiration, given\n\npara_set A RespirationTDCLM type parameter set\nt_leaf Leaf temperature\n\nThe equations used are f_above = C * exp [ ( Ha /RT_0 ) * ( 1 - T_0/T_1 ) ], f_below = 1 + exp [ ( Sv*T_1 - Hd ) / ( RT_1) ], C = 1 + exp[(Sv*T_0 - Hd )/(RT_0 )], and correction = f_above /f_below\n\n\n\n\n\narrhenius_correction(para_set::VcmaxTDCLM{FT}, t_leaf::FT)\n\nArrhenius correction over Vcmax, given\n\npara_set A VcmaxTDCLM type parameter set\nt_leaf Leaf temperature\n\nThe equations used are f_above = C * exp [ ( Ha /RT_0 ) * ( 1 - T_0/T_1 ) ], f_below = 1 + exp [ ( Sv*T_1 - Hd ) / ( RT_1) ], C = 1 + exp[(Sv*T_0 - Hd )/(RT_0 )], and correction = f_above /f_below\n\n\n\n\n\narrhenius_correction(para_set::VcmaxTDLeuning{FT}, t_leaf::FT)\n\nArrhenius correction over Vcmax, given\n\npara_set A VcmaxTDLeuning type parameter set\nt_leaf Leaf temperature\n\nThe equations used are f_above = C * exp [ ( Ha /RT_0 ) * ( 1 - T_0/T_1 ) ], f_below = 1 + exp [ ( Sv*T_1 - Hd ) / ( RT_1) ], C = 1 + exp[(Sv*T_0 - Hd )/(RT_0 )], and correction = f_above /f_below\n\n\n\n\n\narrhenius_correction(para_set::VpmaxTDBoyd{FT}, t_leaf::FT)\n\nArrhenius correction over Vpmax, given\n\npara_set A VpmaxTDBoyd type parameter set\nt_leaf Leaf temperature\n\nThe equations used are f_above = C * exp [ ( Ha /RT_0 ) * ( 1 - T_0/T_1 ) ], f_below = 1 + exp [ ( Sv*T_1 - Hd ) / ( RT_1) ], C = 1 + exp[(Sv*T_0 - Hd )/(RT_0 )], and correction = f_above /f_below\n\n\n\n\n\n","category":"function"},{"location":"photosynthesis_models/#Parameter-Sets-1","page":"PhotosynthesisModels Module","title":"Parameter Sets","text":"","category":"section"},{"location":"photosynthesis_models/#RespirationVcmax-1","page":"PhotosynthesisModels Module","title":"Respiration~Vcmax","text":"","category":"section"},{"location":"photosynthesis_models/#","page":"PhotosynthesisModels Module","title":"PhotosynthesisModels Module","text":"Land.PhotosynthesisModels.VtoRCollatz\nLand.PhotosynthesisModels.VtoRDefault","category":"page"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.VtoRCollatz","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.VtoRCollatz","text":"VtoRCollatz{FT} <: AbstractVtoR\n\nA non-mutable AbstractVtoR type VtoRCollatz that stores information for Respiration Vcmax25 correction. The equation used is r25 = v25 * correction. The data source for the constants can be referred from Collatz et al. (1991) \"Physiological and environmental regulation of stomatal conductance, photosynthesis and transpiration: a model that includes a laminar boundary layer.\"\n\nFields\n\nv_to_r\nRatio between r25 and v25\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.VtoRDefault","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.VtoRDefault","text":"VtoRDefault{FT} <: AbstractVtoR\n\nA non-mutable AbstractVtoR type VtoRDefault that stores information for Respiration Vcmax25 correction. The equation used is r25 = v25 * correction. Correction default at 0.015\n\nFields\n\nv_to_r\nRatio between r25 and v25\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Preset-Photosynthesis-Types-1","page":"PhotosynthesisModels Module","title":"Preset Photosynthesis Types","text":"","category":"section"},{"location":"photosynthesis_models/#","page":"PhotosynthesisModels Module","title":"PhotosynthesisModels Module","text":"Land.PhotosynthesisModels.C3VcJBernacchi\nLand.PhotosynthesisModels.C3VcVpJBernacchi\nLand.PhotosynthesisModels.C4VcVpJBoyd\nLand.PhotosynthesisModels.C4VcVpJCLM","category":"page"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.C3VcJBernacchi","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.C3VcJBernacchi","text":"C3VcJBernacchi{FT} <: C3ParaSetVcJ\n\nA C3ParaSetVcJ type of parameter sets for different temperature dependencies.\n\nFields\n\nJT\nJmax temperature dependency\nKcT\nKc temperature dependency\nKoT\nKo temperature dependency\nReT\nRespiration temperature dependency\nVcT\nVcmax temperature dependency\nΓsT\nΓ_star temperature dependency\nVR\nVcmax25 and respiration correlation\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.C3VcVpJBernacchi","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.C3VcVpJBernacchi","text":"C3VcVpJBernacchi{FT} <: C3ParaSetVcVpJ\n\nA C3ParaSetVcVpJ type of parameter sets for different temperature dependencies.\n\nFields\n\nJT\nJmax temperature dependency\nKcT\nKc temperature dependency\nKoT\nKo temperature dependency\nReT\nRespiration temperature dependency\nVcT\nVcmax temperature dependency\nΓsT\nΓ_star temperature dependency\nVR\nVcmax25 and respiration correlation\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.C4VcVpJBoyd","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.C4VcVpJBoyd","text":"C4VcVpJBoyd{FT} <: C4ParaSetVcVpJ\n\nA C4ParaSetVcVpJ type of parameter sets for different temperature dependencies.\n\nFields\n\nKpT\nKpep temperature dependency\nReT\nRespiration temperature dependency\nVcT\nVcmax temperature dependency\nVpT\nVpmax temperature dependency\nVR\nVcmax25 and respiration correlation\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.C4VcVpJCLM","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.C4VcVpJCLM","text":"C4VcVpJCLM{FT} <: C4ParaSetVcVpJ\n\nA C4ParaSetVcVpJ type of parameter sets for different temperature dependencies.\n\nFields\n\nKpT\nKpep temperature dependency\nReT\nRespiration temperature dependency\nVcT\nVcmax temperature dependency\nVpT\nVpmax temperature dependency\nVR\nVcmax25 and respiration correlation\n\n\n\n\n\n","category":"type"},{"location":"photosynthesis_models/#Procedure-1","page":"PhotosynthesisModels Module","title":"Procedure","text":"","category":"section"},{"location":"photosynthesis_models/#Calculate-Photosynthesis-from-CO2-1","page":"PhotosynthesisModels Module","title":"Calculate Photosynthesis from CO2","text":"","category":"section"},{"location":"photosynthesis_models/#","page":"PhotosynthesisModels Module","title":"PhotosynthesisModels Module","text":"Land.PhotosynthesisModels.get_an_ag_r_from_pi","category":"page"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.get_an_ag_r_from_pi","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.get_an_ag_r_from_pi","text":"get_an_ag_r_from_pi(model::C3ParaSetVcJ, p_i::FT, v25::FT, j25::FT, par::FT, p_O₂::FT, t_leaf::FT, r25::FT, curvature::FT, qy::FT)\n\nGross photosynthetic rate limited by carboxylation without ATP limitation, given\n\nmodel A C3ParaSetVcJ type parameter sets that stores temperature denpendencies\np_i Leaf internal CO₂ partial pressure\nv25 Maximal carboxylation rate at 298.15 K\nj25 Maximal electron transport rate\npar Absorbed photosynthetic active radiation\np_O₂ O₂ partial pressure\nt_leaf Leaf temperature\nr25 Respiration rate at 298.15 K\ncurvature Curvature parameter to calculate J\nqy Quantum yield of electron\n\nThe equations used are from Farquhar et al. (1980) \"A biochemical model of photosynthetic CO2 assimilation in leaves of C3 species.\"\n\n\n\n\n\nget_an_ag_r_from_pi(model::C3ParaSetVcVpJ, p_i::FT, v25::FT, j25::FT, par::FT, p_O₂::FT, t_leaf::FT, r25::FT, curvature::FT, qy::FT)\n\nGross photosynthetic rate limited by carboxylation with ATP limitation, given\n\nmodel A C3ParaSetVcVpJ type parameter sets that stores temperature denpendencies\np_i Leaf internal CO₂ partial pressure\nv25 Maximal carboxylation rate at 298.15 K\nj25 Maximal electron transport rate\npar Absorbed photosynthetic active radiation\np_O₂ O₂ partial pressure\nt_leaf Leaf temperature\nr25 Respiration rate at 298.15 K\ncurvature Curvature parameter to calculate J\nqy Quantum yield of electron\n\nThe equations used are from Farquhar et al. (1980) \"A biochemical model of photosynthetic CO2 assimilation in leaves of C3 species.\"\n\n\n\n\n\nget_an_ag_r_from_pi(model::C4ParaSetVcVpJ, p_i::FT, v25::FT, p25::FT, par::FT, t_leaf::FT, r25::FT, qy::FT)\n\nGross photosynthetic rate limited by carboxylation, given\n\nmodel A C4ParaSetVcVpJ type parameter sets that stores temperature denpendencies\np_i Leaf internal CO₂ partial pressure\nv25 Maximal carboxylation rate at 298.15 K\np25 Maximal PEP carboxylation rate at 298.15 K\npar Absorbed photosynthetic active radiation\nt_leaf Leaf temperature\nr25 Respiration rate at 298.15 K\nqy Quantum yield of electron\n\nThe model is adapted from Collatz et al. (1992) \"Coupled photosynthesis-stomatal conductance model for leaves of C4 plants.\"\n\n\n\n\n\n","category":"function"},{"location":"photosynthesis_models/#Calculate-Photosynthesis-from-gsc-1","page":"PhotosynthesisModels Module","title":"Calculate Photosynthesis from gsc","text":"","category":"section"},{"location":"photosynthesis_models/#","page":"PhotosynthesisModels Module","title":"PhotosynthesisModels Module","text":"Land.PhotosynthesisModels.get_an_ag_r_pi_from_gsc\nLand.PhotosynthesisModels.get_an_ag_r_pi_from_gsc_list","category":"page"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.get_an_ag_r_pi_from_gsc","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.get_an_ag_r_pi_from_gsc","text":"get_an_ag_r_pi_from_gsc(model::C3ParaSet, gsc::FT, v25::FT, j25::FT, p25::FT, p_a::FT, t_leaf::FT, par::FT, p_atm::FT, p_O₂::FT, r25::FT, curvature::FT, qy::FT)\n\nNet photosynthetic rate tar_an, gross photosynthetic rate tar_ag, respiration rate tar_r, and leaf internal CO₂ partial pressure tar_p, given\n\nmodel A C3ParaSet type parameter set\ngsc Leaf diffusive conductance to CO₂\nv25 Maixmal carboxylation rate at 298.15 K (25 Celcius)\nj25 Maximal electron transport rate at 298.15 K (25 Celcius)\np25 Maximal PEP carboxylation rate at 298.15 K, C4 plant only\np_a Atmospheric CO₂ partial pressure\nt_leaf Leaf temperature\npar Photosynthetic active radiation\np_atm Atmospheric pressure\np_O₂ O₂ partial pressure\nr25 Leaf respiration rate at 298.15 K (25 Celcius). If ==Inf, r25 will be computed from v25\ncurvature Curvature parameter to calculate J\nqy Quantum yield of electron\n\nFor C3 plants, w/wo ATP limitation. Some parameters are useless in C3 photosynthesis, like p25.\n\n\n\n\n\nget_an_ag_r_pi_from_gsc(model::C4ParaSet, gsc::FT, v25::FT, j25::FT, p25::FT, p_a::FT, t_leaf::FT, par::FT, p_atm::FT, p_O₂::FT, r25::FT, curvature::FT, qy::FT)\n\nNet photosynthetic rate tar_an, gross photosynthetic rate tar_ag, respiration rate tar_r, and leaf internal CO₂ partial pressure tar_p, given\n\nmodel A C4ParaSet type parameter set\ngsc Leaf diffusive conductance to CO₂\nv25 Maixmal carboxylation rate at 298.15 K (25 Celcius)\nj25 Maximal electron transport rate at 298.15 K (25 Celcius)\np25 Maximal PEP carboxylation rate at 298.15 K, C4 plant only\np_a Atmospheric CO₂ partial pressure\nt_leaf Leaf temperature\npar Photosynthetic active radiation\np_atm Atmospheric pressure\np_O₂ O₂ partial pressure\nr25 Leaf respiration rate at 298.15 K (25 Celcius). If ==Inf, r25 will be computed from v25\ncurvature Curvature parameter to calculate J\nqy Quantum yield of electron\n\nFor C4 plants. Some parameters are useless for C4 photosynthesis, like j25, p_O₂, and curvature.\n\n\n\n\n\n","category":"function"},{"location":"photosynthesis_models/#Land.PhotosynthesisModels.get_an_ag_r_pi_from_gsc_list","page":"PhotosynthesisModels Module","title":"Land.PhotosynthesisModels.get_an_ag_r_pi_from_gsc_list","text":"get_an_ag_r_pi_from_gsc_list(model::C3ParaSet, gsc_list::Array{FT,1}, v25::FT, j25::FT, p25::FT, p_a::FT, t_leaf_list::Array{FT,1}, par_list::Array{FT,1}, p_atm::FT, p_O₂::FT, r25::FT, curvature::FT, qy::FT)\n\nList of net photosynthetic rate list_an, gross photosynthetic rate list_ag, respiration rate list_re, and leaf internal CO₂ partial pressure list_pi, given\n\nmodel A C3ParaSet type parameter set\ngsc_list List of leaf diffusive conductance to CO₂\nv25 Maixmal carboxylation rate at 298.15 K (25 Celcius)\nj25 Maximal electron transport rate at 298.15 K (25 Celcius)\np25 Maximal PEP carboxylation rate at 298.15 K, C4 plants only\np_a Atmospheric CO₂ partial pressure\nt_leaf_list List of leaf temperature\npar_list List of photosynthetic active radiation\np_atm Atmospheric pressure\np_O₂ O₂ partial pressure\nr25 Leaf respiration rate at 298.15 K (25 Celcius). If ==Inf, r25 will be computed from v25\ncurvature Curvature parameter to calculate J\nqy Quantum yield of electron\n\nSome parameters are useless here for C3 photosynthesis model (e.g., p25), but they are given for more convenient modeling.\n\n\n\n\n\nget_an_ag_r_pi_from_gsc_list(model::C4ParaSet, gsc_list::Array{FT,1}, v25::FT, j25::FT, p25::FT, p_a::FT, t_leaf_list::Array{FT,1}, par_list::Array{FT,1}, p_atm::FT, p_O₂::FT, r25::FT, curvature::FT, qy::FT)\n\nList of net photosynthetic rate list_an, gross photosynthetic rate list_ag, respiration rate list_re, and leaf internal CO₂ partial pressure list_pi, given\n\nmodel A C4ParaSet type parameter set\ngsc_list List of leaf diffusive conductance to CO₂\nv25 Maixmal carboxylation rate at 298.15 K (25 Celcius)\nj25 Maximal electron transport rate at 298.15 K (25 Celcius)\np25 Maximal PEP carboxylation rate at 298.15 K, C4 plants only\np_a Atmospheric CO₂ partial pressure\nt_leaf_list List of leaf temperature\npar_list List of photosynthetic active radiation\np_atm Atmospheric pressure\np_O₂ O₂ partial pressure\nr25 Leaf respiration rate at 298.15 K (25 Celcius). If ==Inf, r25 will be computed from v25\ncurvature Curvature parameter to calculate J\nqy Quantum yield of electron\n\nSome parameters are useless here for C4 photosynthesis model (e.g., p_O₂), but they are given for more convenient modeling.\n\n\n\n\n\n","category":"function"},{"location":"#Land-model-1","page":"Home","title":"Land model","text":"","category":"section"},{"location":"#Example-Documentation-1","page":"Home","title":"Example Documentation","text":"","category":"section"},{"location":"#Canopy-RT-module-1","page":"Home","title":"Canopy RT module","text":"","category":"section"},{"location":"#Leaf-Bio-Structure:-1","page":"Home","title":"Leaf Bio Structure:","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Land.CanopyRT.leafbio","category":"page"},{"location":"#Land.CanopyRT.leafbio","page":"Home","title":"Land.CanopyRT.leafbio","text":"leafbio\n\nFields\n\nN\nLeaf structure parameter (-)\nCab\nChlorophyll a+b content (µg cm-2)\nCar\nCarotenoid content (µg cm-2)\nAnt\nAnthocynanin content (µg cm-2)\nCs\nSenescent material fraction (-)\nCw\nEquivalent water thickness (cm)\nCm\nDry matter content (dry leaf mass per unit area) (g cm-2)\nCx\nFractionation between Zeaxanthin and Violaxanthin in Car (1=all Zeaxanthin) (-)\nρ_LW\nBroadband thermal reflectance (-)\nτ_LW\nBroadband thermal transmission (-)\nfqe\nLeaf fluorescence efficiency (Fo standard)\nρ_SW\nshortwave leaf reflectance (-)\nτ_SW\nshortwave leaf transmission (-)\nkChlrel\nrelative absorbtion by Chlorophyll+Car (-)\nkChlrel_old\nrelative absorbtion by Chlorophyll (-)\nMb\nFluorescence excitation matrix backwards (-)\nMf\nFluorescence excitation matrix forwards (-)\n\n\n\n\n\n","category":"type"},{"location":"#Canopy-Structure-1","page":"Home","title":"Canopy Structure","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Land.CanopyRT.struct_canopy","category":"page"},{"location":"#Land.CanopyRT.struct_canopy","page":"Home","title":"Land.CanopyRT.struct_canopy","text":"struct_canopy\n\nFields\n\nnlayers\nnumber of canopy layers\nLAI\nLeaf Area Index\nΩ\nClumping factor\nclump_a\nStructure factor a\nclump_b\nStructure factor b\nleafwidth\nLeaf width\nhc\nVegetation height\nLIDFa\nLeaf Inclination\nLIDFb\nVariation in leaf inclination\nhot\nHotSpot parameter (still need to check!)\nheight\nCanopy height (m)\nz0m\nCanopy roughness (m)\nz0h\nd\nCanopy displacement height (m)\nCd\nm/sqrt(s) turbulent transfer coefficient\nlazitab\nlidf\nxl\ndx\n\n\n\n\n\n","category":"type"},{"location":"#Canopy-Radiation-Structure-1","page":"Home","title":"Canopy Radiation Structure","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Land.CanopyRT.struct_canopyRadiation","category":"page"},{"location":"#Land.CanopyRT.struct_canopyRadiation","page":"Home","title":"Land.CanopyRT.struct_canopyRadiation","text":"struct_canopyRadiation\n\nFields\n\nintEout\nintegrated TOC outgoing flux [W m^-2]\nincomingPAR\nincident spectrally integrated total PAR [moles m^-2 s^-1]\nincomingPAR_direct\nincident spectrally integrated direct PAR [moles m^-2 s^-1]\nincomingPAR_diffuse\nincident spectrally integrated diffuse PAR [moles m^-2 s^-1]\nRnSoil_diffuse\nnet radiation of shaded soil [W m^-2]\nRnSoil_direct\nnet Short-wave radiation of sunlit soil [W m^-2]\nRnSoil\nnet Short-wave radiation of soil (shaded + sunlit) [W m^-2]\nRnSoilLW\nnet long-wave radiation of soil (shaded + sunlit) [W m^-2]\nabsPAR_shade\nnet PAR of shaded leaves [moles m^-2 s^-1]\nabsPAR_shadeCab\nnet PAR by Cab+Car of shaded leaves [moles m^-2 s^-1]\nLo\nShort-wave TOC outgoing radiance in observation direction [mW m^-2 μm^-1 sr^-1]\nEout\nShort-wave TOC outgoing radiation [mW m^-2 μm^-1]\nalb_obs\nShort-wave Albedo in viewing direction\nalb_direct\nShort-wave Albedo for direct incoming radiation\nalb_diffuse\nShort-wave Albedo for diffuse incoming radiation\nE_up\nupwelling diffuse short-wave radiation within canopy [mW m^-2 μm^-1]\nE_down\ndownwelling diffuse short-wave radiation within canopy [mW m^-2 μm^-1]\nnetSW_sunlit\nnet absorbed direct radiation in each layer [mW m^-2 μm^-1]\nnetSW_shade\nnet absorbed diffuse radiation in each layer [mW m^-2 μm^-1]\nintNetSW_sunlit\nspectrally integrated net absorbed direct radiation in each layer [W m^-2)]\nintNetSW_shade\nspectrally integrated net absorbed diffuse radiation in each layer [W m^-2)]\nintNetLW_sunlit\nspectrally integrated net absorbed direct radiation in each layer [W m^-2)]\nintNetLW_shade\nspectrally integrated net absorbed diffuse radiation in each layer [W m^-2)]\nabsPAR_sun\nnet PAR of sunlit leaves [mol m^-2 s^-1]\nabsPAR_sunCab\nnet PAR by Cab+Car of sunlit leaves [mol m^-2 s^-1]\nT_sun3D\nLeaf temperature (sunlit) (K)\nT_sun\nLeaf temperature (sunlit) (K)\nϕ_sun\nFluorescence yield for sunlit leaves\nT_shade\nLeaf temperature (shaded) (K)\nϕ_shade\nFluorescence yield for shaded leaves\nGPP_sun\nGPP of sunlit leaves [μmol m^-2 s^-1]\nGPP_shade\nGPP of shaded leaves [μmol m^-2 s^-1]\ngs_shade\ngs of shaded leaves [mol m^-2 s^-1]\ngs_sun\ngs of sunlit leaves [mol m^-2 s^-1]\nH_shade\nSensible Heat flux H of shaded leaves [W m-2]\nH_sun\nSensible Heat flux H of sunlit leaves [W m-2]\nLE_shade\nLatent Heat flux LE of shaded leaves [W m-2]\nLE_sun\nLatent Heat flux LE of sunlit leaves [W m-2]\nψl_shade\nLeaf water potential of shaded leaves [MPa]\nψl_sun\nLeaf water potential of sunlit leaves [MPa]\nCc_shade\nCc of shaded leaves [µmol/mol]\nCc_sun\nCc of sunlit leaves [µmol/mol]\nNPQ_shade\nNPQ of shaded leaves [-]\nNPQ_sun\nNPQ of sunlit leaves [-]\nSIF_hemi\nHemispheric total outgoing SIF flux [mW m^-2 μm^-1])\nSIF_obs\nObserver-direction outgoing SIF radiance  (mW m^-2 μm^-1 sr^-1))\nSIF_obs_sunlit\nObserver-direction outgoing SIF radiance, sunlit leaves  (mW m^-2 μm^-1 sr^-1))\nSIF_obs_shaded\nObserver-direction outgoing SIF radiance, shaded leaves  (mW m^-2 μm^-1 sr^-1))\nSIF_obs_scattered\nObserver-direction outgoing SIF radiance, scattered   (mW m^-2 μm^-1 sr^-1))\nSIF_obs_soil\nObserver-direction outgoing SIF radiance, soil-reflected  (mW m^-2 μm^-1 sr^-1))\nSIF_sum\nTotal SIF sum of layer sources  [mW m^-2 μm^-1])\n\n\n\n\n\n","category":"type"},{"location":"#Canopy-Optical-Property-Structure-1","page":"Home","title":"Canopy Optical Property Structure","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Land.CanopyRT.struct_canopyOptProps","category":"page"},{"location":"#Land.CanopyRT.struct_canopyOptProps","page":"Home","title":"Land.CanopyRT.struct_canopyOptProps","text":"struct_canopyOptProps\n\nFields\n\nsdb\nSolar -> Diffuse backscatter weight\nsdf\nSolar -> Diffuse forward scatter weight\ndob\nDiffuse -> Directional backscatter weight\ndof\nDiffuse -> Directional forward scatter weight\nddb\nDiffuse -> Diffuse backscatter weight\nddf\nDiffuse -> Diffuse forward scatter weight\nks\nSolar beam extinction coefficient weight\nko\nOutgoing beam extinction coefficient weight\nbf\n\nsob\nweight of specular2directional backscatter coefficient\nsof\nweight of specular2directional forward coefficient\nfs\nconversion factor fs to compute irradiance on inclined leaf\nabsfs\nabs(fs)\nabsfsfo\nabs(fs*fo)\nfsfo\nfs*fo\nfo\nconversion factor fo for angle towards observer (not sun like fs)\ncosΘ_l\nCosine of leaf azimuths\ncos2Θ_l\ncos of leaf azimuth sqared\nPs\nProbability of directly viewing a leaf in solar direction\nPo\nProbability of directly viewing a leaf in viewing direction\nPso\nBi-directional probability of directly viewing a leaf (solar->canopy->viewing)\nsigb\ndiffuse     backscatter scattering coefficient for diffuse  incidence\nsigf\ndiffuse     forward     scattering coefficient for diffuse  incidence\nsb\ndiffuse     backscatter scattering coefficient for specular incidence\nsf\ndiffuse     forward     scattering coefficient for specular incidence\nvb\ndirectional backscatter scattering coefficient for diffuse  incidence\nvf\ndirectional forward     scattering coefficient for diffuse  incidence\nw\nbidirectional scattering coefficent (directional-directional)\na\nattenuation\nXsd\nEffective layer transmittance (direct->diffuse)\nXdd\nEffective layer transmittance (diffuse->diffuse)\nR_sd\nEffective layer reflectance (direct->diffuse)\nR_dd\nEffective layer reflectance (diffuse->diffuse)\nEs_\nSolar direct radiation per layer)\n\n\n\n\n\n","category":"type"},{"location":"#Photosynthesis-module-1","page":"Home","title":"Photosynthesis module","text":"","category":"section"},{"location":"#Leaf-Params:-1","page":"Home","title":"Leaf Params:","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Land.Photosynthesis.leaf_params","category":"page"},{"location":"#Land.Photosynthesis.leaf_params","page":"Home","title":"Land.Photosynthesis.leaf_params","text":"leaf_params{FT<:AbstractFloat}\nA structure, which contains all parameters for photosynthesis calculations of a single leaf\n\nFields\n\nα\nbroadband shortwave albedo\nε\nlongwave emissivity\nLMA\nDRY leaf mass area [kg/m2]\nRWC\nleaf relative water content [-]\nCleaf\nleaf specific heat capacity [J/kg/K]\nChloroplast_rel_volume\nChloroplast volume airspace [m^3 per pore]\nPSII_frac\nFraction of absorbed light used by PSII ETR\nKf\nRate constant for fluorescence (const)\nKd\nRate constant for thermal dissipation\nKp\nRate constant for photochemistry (all reaction centers open)\nKn\nNPQ rate constant\nKn_ss\nmaxPSII\nmax PSII yield\nFo\ndark-adapted fluorescence yield Fo (Kp=max)\nFo′\nlight-adapted fluorescence yield Fo' (Kp=max)\nFm\ndark adapted Fm yield (Kp=0)\nFm′\nlight adapted Fm' yield (Kp=0)\nϕs\nsteady-state (light-adapted) yield Ft (aka Fs)\nφ\nPSII yield\nqQ\nPhotochemical quenching\nqE\nNPQ\nNon-Photochemical quenching\ndynamic_state\nDynamic Steady state [Bool]\neffcon\nEfficiency of photosynthesis light reactions[mol CO₂/mol e-]\nCO2_per_electron\nTotal efficiency, incl. photorespiration [mol CO₂/mol e-]\nJa\nActual electron transport rate [μmol m-2 s-1]\no₂\nO₂ mixing ratio [mol/mol]\nT\nLeaf temperature [K)]\nT_old\nPrevious Leaf temperature [K]\nesat\nSaturation vapor pressure at leaf temperature [Pa]\ndesat\nDerivative of saturation vapor pressure at leaf temperature wrt T [Pa/K]\nθ_j\nCurvature parameter:\ngleaf\ntotal leaf conductance [mmol H₂O /m2/s]\ngm\nMesophyll conductance [mmol H₂O /m2/s]\ngs\nStomatal conductance [mmol H₂O /m2/s]\ngs_ss\nSteady state Stomatal conductance [mmol H₂O /m2/s]\nAg\nGross Photosynthetic Rate [μmol/m2/s]\nAn\nNet Photosynthetic Rate [μmol/m2/s]\nAc\nRubisco Limited  Photosynthetic Rate [μmol/m2/s]\nAj\nLight Limited  Photosynthetic Rate [μmol/m2/s]\nAp\nProduct Limited  Photosynthetic Rate [μmol/m2/s]\nH\nSensible Heat Flux [W/m2]\nLE\nLatent Heat Flux [W/m2]\nRn\nNet Radiation Balance [W/m2]\nSap\nSap flow [?]\nAPAR\nAbsorbed Photosynthetically Active Radiation [μmol/m2/s]\nKc\nMichaelis-Menten constant for CO₂ [Pa]\nKo\nMichaelis-Menten constant for O₂ [Pa]\nKpep\nMichaelis-Menten constant for PEP carboxylase [Pa]\nΓstar\nCO₂ compensation point [Pa]\nVcmax25\nLeaf maximum carboxylation rate at 25C [μmol/m2/s]\nVpmax25\nLeaf maximum PEP carboxylation rate at 25C [μmol/m2/s]\nJmax25\nMaximum electron transport rate at 25C [μmol/m2/s]\nRd25\nLeaf respiration rate at 25C [μmol/m2/s]\nVcmax\nActual Leaf maximum carboxylation rate [μmol/m2/s]\nVpmax\nActual Leaf maximum PEP carboxylase rate [μmol/m2/s]\nJmax\nActual Maximum electron transport rate [μmol/m2/s]\nRd\nActual Leaf respiration rate [μmol/m2/s]\nCs\nCO₂ concentration at leaf surface [μmol/mol]\nCc\nCO₂ concentration in chloroplast `[μmol/mol]\nRH\nrelative humidity at the surface of the leaf [-]\nVPD\nVapor pressure difference across leaf interface [Pa]\nJe\nElectron transport rate [μmol/m2/s], light limited only\nJe_pot\nPotential Electron Transport Rate [μmol/m2/s]\npsi_l\nleaf water potential [Pa]\npsi_l50\nleaf water potential at 50% drop in conductivity [Pa]\nkmax\nmaximum leaf-xylem conductivity [m/s]\nkx\nactual xylem conductivity [m/s]\nkleaf\nleaf level hydraulic conductivity [m/s]\nck\nslope of Weibull curve [m/s/Pa]\nheight\ntree height [m]\nCtree\ntree capacitance [kg/m3/Pa]\nuse_colim\nz0m\nz0h\nd\ndleaf\nLAI\nCd\n\n\n\n\n\n","category":"type"},{"location":"#Leaf-Rate-Limiting-Steps:-1","page":"Home","title":"Leaf Rate Limiting Steps:","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Land.Photosynthesis.max_carboxylation_rate!\nLand.Photosynthesis.max_electron_transport_rate!\nLand.Photosynthesis.michaelis_menten_constants!\nLand.Photosynthesis.leaf_respiration!","category":"page"},{"location":"#Land.Photosynthesis.max_carboxylation_rate!","page":"Home","title":"Land.Photosynthesis.max_carboxylation_rate!","text":"max_carboxylation_rate!(model::VcmaxCLM, leaf)\n\nCalculates the maximum carboxylation rate (Vcmax) at the leaf temperature as in CLM, given\n\nmodel One VcmaxCLM \nleaf One leaf_params \n\n\n\n\n\nmax_carboxylation_rate(model::VcmaxBernacchi, leaf)\n\nCalculates the maximum carboxylation rate (Vcmax) at the leaf temperature (Bernacchi 2001 paper)\n\n\n\n\n\n","category":"function"},{"location":"#Land.Photosynthesis.max_electron_transport_rate!","page":"Home","title":"Land.Photosynthesis.max_electron_transport_rate!","text":"max_electron_transport_rate(model::JmaxCLM, leaf)\n\nCalculates the potential max_electron transport rate (Jmax) at the leaf temperature \n\n\n\n\n\n","category":"function"},{"location":"#Land.Photosynthesis.michaelis_menten_constants!","page":"Home","title":"Land.Photosynthesis.michaelis_menten_constants!","text":"michaelis_menten_constants(model::JmaxCLM, leaf)\n\nCalculates the leaf temperature adjusted Michaelis Menten constants  \n\n\n\n\n\n","category":"function"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"EditURL = \"https://github.com/CliMA/Land/blob/master/notebooks/Leaf-Photosynthesis-Rates.jl\"","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#Rate-Constants,-T-dependence-1","page":"Enzyme catalysis T-dependence","title":"Rate Constants, T-dependence","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"Here, we will just briefly summarize how temperature affects enzymatic rate constants and how much uncertainty there actually is in literature (in terms of how to best define them and how plastic some of the variables are)","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"# Add usual tools we use:\n#using Revise\nusing BenchmarkTools\nusing Plots\npyplot()","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"# load Photosynthesis module:\nusing Land.Photosynthesis","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"# Specify Field Type\nconst FT = Float32","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"# Create a standard leaf with defualt parameters\nleaf = leaf_params{FT}();\n\n# Create a standard meteo structure:\nmet = meteo{FT}();\nnothing #hide","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"fieldnames(Photosynthesis.leaf_params)","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#T-dependence-of-V_{c,max}-1","page":"Enzyme catalysis T-dependence","title":"T-dependence of V_cmax","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"In literature, there are different implementations of the temperature dependence of enzymatic reaction rates. Common among all of them is a typical Arrhenius formulation with Activation energy E_a, which leads to a temperature dependence of a quantity V given the standard value defined at 25°C as T_ref.","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"V(T)= V(T_ref) underbraceexpleft(fracE_aRT_ref-fracE_aRTright)_textActivation","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"Other formulations add de-activation of proteins due to denaturalization at higher temperatures: $V(T)= V(T{ref})\\, \\exp\\left(\\frac{Ea}{RT{ref}}-\\frac{Ea}{RT}\\right) \\underbrace{\\frac{1+\\exp\\left((\\Delta ST{ref}-Hd)/RT{ref}\\right)}{1+\\exp\\left((\\Delta ST-Hd)/RT\\right)}}{\\text{de-activation}} $ which includes an entropy term Delta S and the energy for deactivation Hd$.","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"To illustrate the differences, we show two different implementations, one only using the activation part based on Bernacchi et al 2001[1] and one with the typical CLM5 implementation.","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"[1]: Bernacchi, C.J., Singsaas, E.L., Pimentel, C., Portis Jr, A.R. and Long, S.P., 2001. Improved temperature response functions for models of Rubisco‐limited photosynthesis. Plant, Cell & Environment, 24(2), pp.253-259.","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"# This looks a bit more tedious here than it needs to but in reality\nvcmax_Bernacchi = Float32[];vcmax_CLM = Float32[]\n\n# Define T-range\nTleaf = 260:1:315\n\n# Run through temperatures and save Vcmax values:\nfor T in Tleaf\n    leaf.T = T\n    Photosynthesis.max_carboxylation_rate!(VcmaxBernacchi{Float32}(), leaf)\n    push!(vcmax_Bernacchi, leaf.Vcmax)\n    Photosynthesis.max_carboxylation_rate!(VcmaxCLM{Float32}(), leaf)\n    push!(vcmax_CLM, leaf.Vcmax)\nend","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"plot(Tleaf .- 273.15, vcmax_Bernacchi, label=\"Bernacchi\", lw=2)\nplot!(Tleaf .- 273.15, vcmax_CLM,  label=\"CLM5\", lw=2)\nylabel!(\"Vcmax (µmol/m²/s)\")\nxlabel!(\"Leaf Temperature (°C)\")","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#CO_2-compensation-point-\\Gamma_\\star-1","page":"Enzyme catalysis T-dependence","title":"CO_2 compensation point Gamma_star","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"# Here, we only have one implementation:\nΓ_CLM = Float32[]\nTleaf = 260:1:305\n\nfor T in Tleaf\n    leaf.T = T\n    Photosynthesis.michaelis_menten_constants!(MM_CLM(), leaf)\n    push!(Γ_CLM, leaf.Γstar)\nend","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"plot(Tleaf .- 273.15, Γ_CLM, label=\"Γ_CLM\")\nylabel!(\"Γ⋆ (Pa)\")\nxlabel!(\"Leaf Temperature (C)\")","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#T-dependence-of-J_{max}-1","page":"Enzyme catalysis T-dependence","title":"T-dependence of J_max","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"Jmax_Bernacchi = Float32[]\nJmax_CLM = Float32[]\n\nTleaf = 260:1:315\n\nfor T in Tleaf\n    leaf.T = T\n    Photosynthesis.max_electron_transport_rate!(JmaxBernacchi{Float32}(), leaf)\n    push!(Jmax_Bernacchi, leaf.Jmax)\n    Photosynthesis.max_electron_transport_rate!(JmaxCLM{Float32}(), leaf)\n    push!(Jmax_CLM, leaf.Jmax)\nend","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"plot(Tleaf .- 273.15, Jmax_Bernacchi, label=\"Bernacchi\")\nplot!(Tleaf .- 273.15, Jmax_CLM,  label=\"CLM5\")\nylabel!(\"Jmax (µmol/m2/s)\")\nxlabel!(\"Leaf Temperature (C)\")","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#Summary-1","page":"Enzyme catalysis T-dependence","title":"Summary","text":"","category":"section"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"The way land surface models implement temperature variations in V_cmax is still rather variable and there is no clear consensus in what model is best. In addition, gas exchange datasets performed at different temperatures might actually alias different confounding factors into the V_cmax determination, so that the actually fitted V_cmax strongly depends on the model formulation. E.g. mesophyll conductance is usually ignore in deriving V_cmax but might be temperature dependent, which can cause T-dependent errors in V_cmax.","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"That said, having the option to use different model forumations and actually using the ones that are implemented in land surface models directly when fitting leaf level measurements seems to be a prudent way to improve models in the future. More leaf level data might help in the future, especially looking at temperature dependencies, mesophyll conductance, and fluorescence yields. So many chemical and phsyical aspects change with temperature that it is hard to isolate impacting factors. Now, at least, we can run the models directly in the REPL, which is great for prototyping anc validating the model on the individual module level without any effort in terms of additional coding.","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"","category":"page"},{"location":"generated/Leaf-Photosynthesis-Rates/#","page":"Enzyme catalysis T-dependence","title":"Enzyme catalysis T-dependence","text":"This page was generated using Literate.jl.","category":"page"},{"location":"plant_module/#PLANT-MODULE-1","page":"Plant Module","title":"PLANT MODULE","text":"","category":"section"},{"location":"plant_module/#Plant-Structure-1","page":"Plant Module","title":"Plant Structure","text":"","category":"section"},{"location":"plant_module/#Root-1","page":"Plant Module","title":"Root","text":"","category":"section"},{"location":"plant_module/#","page":"Plant Module","title":"Plant Module","text":"Land.Plant.RootLayer\nLand.Plant.create_root_list","category":"page"},{"location":"plant_module/#Land.Plant.RootLayer","page":"Plant Module","title":"Land.Plant.RootLayer","text":"RootLayer{FT<:AbstractFloat}\n\nA RootLayer type which contains root hydraulics information, including rhizosphere conductance.\n\nFields\n\nz_hi\nUpper root depth [m]\nz_lo\nLower root depth [m]\nr_layer\nAverage horizental root length [m]\nf_layer\nFraction of biomass and k_max\nb\nWeibull function (k = k_max * exp( -(-p/B)^C )) parameter B [MPa]\nc\nWeibull function (k = k_max * exp( -(-p/B)^C )) parameter C\nk_max\nMaximal hydraulic conductance, default at 2700.0 Kg h⁻¹ MPa⁻¹ m⁻² basal area [mol s⁻¹ MPa⁻¹]\nk_s\nMaximal hydraulic conductivity per cross section basal area per root depth [mol s⁻¹ MPa⁻¹ m⁻²]\nk_rhiz\nMaximal rhizosphere conductance, default at 9.72e12 Kg h⁻¹ MPa⁻¹ mm⁻² basal area [mol s⁻¹ MPa⁻¹]\np_ups\nSoil water potential (upstream) [MPa]\nsoil_a\nSoil texture parameter\nsoil_m\nSoil texture parameter, 1 - 1/n\nsoil_n\nSoil texture parameter\nsoil_msc\nMaximal soil volumatric water content, vary with rock fraction\nsoil_rwc\nRelative soil volumatric water content\nsoil_vwc\nSoil volumatric water content\nt_soil\nSoil temperature [K]\nsoil_type\nSoil texture\np_rhiz\nWater potential at the root-rhizosphere interface [MPa]\np_dos\nXylem water pressure at the tree base (downstream) [MPa]\nq\nFlow rate in the root layer [mol s⁻¹]\nk_element\nList of k_max per element [mol s⁻¹ MPa⁻¹]\np_element\nList of xylem water pressure per element [MPa]\np_history\nList of xylem water pressure history (normalized to 298.15 K) per element [MPa]\nt_element\nList of water temperature per element [K]\nz_element\nList of height per element to account for gravity [m]\n\n\n\n\n\n","category":"type"},{"location":"plant_module/#Land.Plant.create_root_list","page":"Plant Module","title":"Land.Plant.create_root_list","text":"create_root_list(FT, n, z_lo)\n\nThe function creates a root system with n root layers evenly in the soil. This function need to work with another function (pending) to quantify the root distribution.\n\nFT Floating type for the RootLayer struct\nn Total number of root layers in the root system\nz_lo Maximal root depth\n\n\n\n\n\n","category":"function"},{"location":"plant_module/#Trunk-and-Branch-1","page":"Plant Module","title":"Trunk and Branch","text":"","category":"section"},{"location":"plant_module/#","page":"Plant Module","title":"Plant Module","text":"Land.Plant.Stem\nLand.Plant.create_branch_list","category":"page"},{"location":"plant_module/#Land.Plant.Stem","page":"Plant Module","title":"Land.Plant.Stem","text":"Stem{FT<:AbstractFloat}\n\nA Stem type which contains hydraulic information, including drought history profile. The Stem type is used for creating a trunk and a list of branches.\n\nFields\n\nr_layer\nHorizental radius of the layer [m]\nz_hi\nUpper height from the ground (trunk-branch joint for trunk, stem-leaf joint for branch) [m]\nz_lo\nLower height from the ground (0 for trunk, trunk-branch joint for branch) [m]\nb\nWeibull function (k = k_max * exp( -(-p/B)^C )) parameter B [MPa]\nc\nWeibull function (k = k_max * exp( -(-p/B)^C )) parameter C\nk_max\nMaximal hydraulic conductance, = 5400.0 * 8/3 Kg h⁻¹ MPa⁻¹ m⁻² basal area [mol s⁻¹ MPa⁻¹]\nk_s\nMaximal hydraulic conductivity per cross section area per tree height [mol s⁻¹ MPa⁻¹ m⁻²]\np_ups\nXylem water pressure at the tree basa (upstream) [MPa]\np_dos\nXylem water pressure at the trunk-stem or stem-leaf joint (downstream) [MPa]\nq\nFlow rate in the xylem [mol s⁻¹]\nk_element\nList of stem k_max per element [mol s⁻¹ MPa⁻¹]\np_element\nList of stem xylem pressure per element [MPa]\np_history\nList of stem xylem pressure history (normalized to 298.15 K) per element [MPa]\nt_element\nList of stem temperature for each element [K]\nz_element\nList of stem height per element to account for gravity [m]\n\n\n\n\n\n","category":"type"},{"location":"plant_module/#Land.Plant.create_branch_list","page":"Plant Module","title":"Land.Plant.create_branch_list","text":"create_branch_list(FT, n, z_lo, z_hi)\n\nThis function creates a list of stem structs as branch system for the tree, given\n\nFT Floating type for the Stem struct\nn Total number of canopy layers, one branch for a canopy layer\nz_lo Minimal canopy distance from the ground\nz_hi Maximal canopy distance from the ground\n\nEach branch (Stem) is responsible for a canopy layer. The branch index from 1:n is from lower to higher canopy.\n\n\n\n\n\n","category":"function"},{"location":"plant_module/#Canopy-and-Leaf-1","page":"Plant Module","title":"Canopy and Leaf","text":"","category":"section"},{"location":"plant_module/#","page":"Plant Module","title":"Plant Module","text":"Land.Plant.Leaf\nLand.Plant.CanopyLayer","category":"page"},{"location":"plant_module/#Land.Plant.Leaf","page":"Plant Module","title":"Land.Plant.Leaf","text":"Leaf{FT<:AbstractFloat}\n\nA Leaf type which contains leaf hydraulics information.\n\nFields\n\nangle_locat\ndirection from the tree trunk to the leaf, 0 for east, 270 for south, and 180 for west [°]\nangle_incli\ndirection of leave, 0 for flat and 90 for vertical [°]\nb\nWeibull function (k = k_max * exp( -(-p/B)^C )) parameter B [MPa]\nc\nWeibull function (k = k_max * exp( -(-p/B)^C )) parameter C\nk_sla\nMaximal leaf hydraulic conductance per leaf area [mol s⁻¹ MPa⁻¹ m⁻²]\np_ups\nLeaf xylem water pressure (different from leaf water potential) at the leaf base (upstream) [MPa]\np_dos\nLeaf xylem water pressure at the downstream end of leaf xylem [MPa]\nk_element\nList of leaf k_max per element (mol s⁻¹ MPa⁻¹)\np_element\nList of xylem water pressure per element [MPa]\np_history\nList of xylem water pressure history (normalized to 298.15 K) per element [MPa]\nt_element\nList of xylem water temperature per element [K]\nz_element\nList of leaf element height change to account for gravity, default = 0 [m]\n\n\n\n\n\n","category":"type"},{"location":"plant_module/#Land.Plant.CanopyLayer","page":"Plant Module","title":"Land.Plant.CanopyLayer","text":"CanopyLayer{FT<:AbstractFloat, n_leaf}\n\nA CanopyLayer type, which constains environemntal conditions and leaf-level fluxes for n_leaf Leaf. The n_leaf is the sum of n_Ari * n_Incli sunlit leaves and 1 shaded leaves.\n\nFields\n\nf_layer\nLeaf area fraction in the canopy\nf_view\nFraction of the sunlit leaves\nla\nLeaf area in the layer [m²]\nwidth\nLeaf width [m]\np_a\nAtmospheric CO₂ partial pressure in the layer [Pa]\np_atm\nAtmospheric pressure [Pa]\np_O₂\nAtmospheric O₂ partial presssure [Pa]\np_H₂O\nAtmospheric H₂O partial pressure [Pa]\nt_air\nAir temperature [K]\nwind\nWind speed [m s⁻¹]\ng_ias_c\nMesophyll conductance correction factor: multiplier\ng_ias_e\nMesophyll conductance correction factor: exponent\ng_max\nMaximal leaf diffusive conductance for H₂O at 298.15 K [mol m⁻² s⁻¹]\ngs_nssf\nNon-steady state factor for optimization approach (use it by multiplying the ∂A/∂E - ∂Θ/∂E)\ngs_empi\nNon-steady state factor for empirical apporach (used by multiplying the gswmod - gswcurr)\nj_max\nMaximal electron transport rate at 298.15 K [μmol m⁻² s⁻¹]\nr_25\nLeaf respiration rate at 298.15 K [μmol m⁻² s⁻¹]\nv_max\nMaximal carboxylation rate at 298.15 K [μmol m⁻² s⁻¹]\np_max\nMaximal PEP carboxylation rate at 298.15 K (only for C4 plants) [μmol m⁻² s⁻¹]\ncurvature\nCurvature ratio for J\nqy\nQuntum yield for electron, using aPAR\nleaf_list\nList of Leaf\nag_list\nList of gross photosynthetic rate for n_leaf leaves [μmol m⁻² s⁻¹]\nan_list\nList of net photosynthetic rate [μmol m⁻² s⁻¹]\nam_list\nList if maximal A at the given scenario [μmol m⁻² s⁻¹]\nd_list\nList of leaf-to-air vapor pressure deficit [unitless]\ne_list\nList of flow rate per leaf area [mol m⁻² s⁻¹]\nec_list\nList of critical flow rate (when leaf xylem pressure induces desiccation) per leaf area [mol m⁻² s⁻¹]\ngsc_list\nList of effective leaf diffusive conductance for CO₂ [mol m⁻² s⁻¹]\ngsw_empi\nList of empirical leaf diffusive conductance for H₂O [mol m⁻² s⁻¹]\ngsw_list\nList of leaf diffusive conductance for H₂O [mol m⁻² s⁻¹]\nkm_list\nList of maximal hydraulic conductance [mol m⁻² s⁻¹]\nla_list\nList of leaf area per leaf [m²]\npar_list\nList of PAR for each leaf\npi_list\nList of leaf internal CO₂ partial pressure [Pa]\nq_list\nList of flow rate [mol s⁻¹]\nr_list\nList of leaf respiration rate [μmol m⁻² s⁻¹]\nt_list\nList of leaf temperature [K]\n\n\n\n\n\n","category":"type"},{"location":"plant_module/#Tree-1","page":"Plant Module","title":"Tree","text":"","category":"section"},{"location":"plant_module/#","page":"Plant Module","title":"Plant Module","text":"Land.Plant.Tree","category":"page"},{"location":"plant_module/#Land.Plant.Tree","page":"Plant Module","title":"Land.Plant.Tree","text":"Tree{FT<:AbstractFloat}\n\nA Tree type which includes\n\nroot_no number of root layers\na trunk\ncanopy_no branches\nleaf_no canopy layers\n\nFields\n\nage\nAge [year]\nba\nBasal area [m²]\nga\nGround area [m²]\nh\nTree height [m]\nphoto_type\nPhotosynthesis type C3/C4/CAM\nphoto_para_set\nPhotosynthesis model parameter set\nstomata_scheme\nOptimization model option\nn_root\nNumber of root layers\nroot_frac\nList of root fraction\nroot_zs\nList of root z lower boundary\nroot_list\nList of RootLayer\nn_canopy\nNumber of canopy layers\ntrunk\nTrunk using type Stem\nbranch_list\nList of Stem\nn_leaf\nNumber of leaves in each canopy layer\ncanopy_list\nList of CanopyLayer\n\n\n\n\n\n","category":"type"},{"location":"plant_module/#Plant-Hydraulics-1","page":"Plant Module","title":"Plant Hydraulics","text":"","category":"section"},{"location":"plant_module/#","page":"Plant Module","title":"Plant Module","text":"Land.Plant.get_struct_p_end_from_q\nLand.Plant.get_q_layer_from_p_base\nLand.Plant.get_p_base_q_list_from_q\nLand.Plant.update_struct_from_q!\nLand.Plant.update_tree_e_crit!","category":"page"},{"location":"plant_module/#Land.Plant.get_struct_p_end_from_q","page":"Plant Module","title":"Land.Plant.get_struct_p_end_from_q","text":"get_struct_from_q(root_layer, flow; p_ini)\n\nEnd pressure p_end (in MPa) for RootLayer, including impacts from rhizosphere conductance and gravity, given\n\nroot_layer One RootLayer in Tree\nflow Flow rate (in mol s⁻¹) in the given RootLayer\np_ini Upstream soil water potential if p_ini is given, otherwise (Inf) root_layer.p_ups will be used\n\n\n\n\n\nget_struct_from_q(stem, flow; p_ini)\n\nEnd pressure p_end (in MPa) for stem Stem, including impact from gravity, given\n\nstem Stem as Trunk in Tree or Stem as side branch in Tree\nflow Flow rate (in mol s⁻¹) in the given Stem\np_ini Upstream xylem pressure if p_ini is given, otherwise (Inf) stem.p_ups will be used\n\n\n\n\n\nget_struct_from_q(leaf, flow; p_ini)\n\nEnd pressure p_end (in MPa) for leaf leaf, including impact from gravity, given\n\nleaf Leaf in CanopyLayer in Tree\nflow Flow rate per leaf area (mol m⁻² s⁻¹) in the given Leaf\np_ini Upstream xylem pressure if p_ini is given, otherwise (Inf) leaf.p_ups will be used\n\n\n\n\n\n","category":"function"},{"location":"plant_module/#Land.Plant.get_q_layer_from_p_base","page":"Plant Module","title":"Land.Plant.get_q_layer_from_p_base","text":"get_q_layer_from_p_base(root_layer, p_base)\n\nFlow rate in a root layer q_layer, given\n\nroot_layer One RootLayer in Tree\np_base Xylem water pressure at the tree base\n\nThis function use Newton Raphson combined with Bi-section to get q_layer. A warning message will display if total iterations exceed 50 times.\n\n\n\n\n\n","category":"function"},{"location":"plant_module/#Land.Plant.get_p_base_q_list_from_q","page":"Plant Module","title":"Land.Plant.get_p_base_q_list_from_q","text":"get_p_base_q_list_from_q(tree, flow)\n\nTree base pressyre p_base and a list of flow rate in each root layer q_list, given\n\ntree A Tree type\nflow Flow rate for the whole tree [mol s⁻¹]\n\nThis function returns the p_base from total transpiration rate using Newton Raphson. A warning will display if total iterations is beyond 50 times.\n\n\n\n\n\n","category":"function"},{"location":"plant_module/#Land.Plant.update_struct_from_q!","page":"Plant Module","title":"Land.Plant.update_struct_from_q!","text":"update_struct_from_q!(root_layer, flow; p_ini)\n\nUpdate root hydraulic information considering the impact from rhizosphere conductance and gravity, given\n\nroot_layer One RootLayer in Tree\nflow Flow rate in the given root layer\np_ini Upstream soil water potential if p_ini is given, otherwise (Inf) root_layer.p_ups will be used\n\n\n\n\n\nupdate_struct_from_q!(stem, flow; p_ini)\n\nUpdate the stem hydraulic information considering the impact from gravity, given\n\nstem Stem as trunk in a Tree or as side branch in Tree\nflow::FT Flow rate in the given stem\np_ini::FT Upstream xylem pressure if p_ini is given, otherwise (Inf) stem.p_ups will be used\n\n\n\n\n\nupdate_struct_from_q!(leaf, flow; p_ini)\n\nUpdate the leaf hydraulic information considering the impact from gravity, given\n\nleaf Leaf type in CanopyLayer in a Tree\nflow Flow rate per leaf area in the given leaf\np_ini Upstream xylem pressure if p_ini is given, otherwise (Inf) leaf.p_ups will be used\n\n\n\n\n\n","category":"function"},{"location":"plant_module/#Land.Plant.update_tree_e_crit!","page":"Plant Module","title":"Land.Plant.update_tree_e_crit!","text":"update_tree_e_crit!(tree; displaying)\n\nUpdate the critical transpiration rate information, given\n\ntree A Tree type\ndisplaying If true, messages of how e_crit evolves step-by-step will display\n\nThis function update e_crit for each layer (sunlit and shaded). The e_crit for each leaf is either increased or decreased so that p_leaf is in the range -Inf to -20.0 MPa. The e_crit increases by 1e-6 mol m⁻² s⁻¹ if p_leaf is less negative than -20 MPa. The e_crit decreases by 1e-7 mol m⁻² s⁻¹ if p_leaf is -Inf.\n\n\n\n\n\n","category":"function"},{"location":"plant_module/#Stomatal-Control-Options-1","page":"Plant Module","title":"Stomatal Control Options","text":"","category":"section"},{"location":"plant_module/#","page":"Plant Module","title":"Plant Module","text":"Land.Plant.ESMBallBerry\nLand.Plant.ESMGentine\nLand.Plant.ESMLeuning\nLand.Plant.ESMMedlyn\nLand.Plant.OSMEller\nLand.Plant.OSMSperry\nLand.Plant.OSMWang\nLand.Plant.OSMWAP\nLand.Plant.OSMWAPMod","category":"page"},{"location":"plant_module/#Land.Plant.ESMBallBerry","page":"Plant Module","title":"Land.Plant.ESMBallBerry","text":"ESMBallBerry{FT}\n\nAn empirical model parameter set type for Ball-Berry type model. The equation used for Ball-Berry type model is gs = g0 + g1 * RH * A/Ci. Note it that these empirical model often takes Ci or Cc as input, so a conversion from Pa to ppm is required.\n\nFields\n\ng0\nminimal stomatal conductance g0 [mol m⁻² s⁻¹], should this one be temperature-dependent?\ng1\nslope of conductance-photosynthesis correlation [unitless]\n\n\n\n\n\n","category":"type"},{"location":"plant_module/#Land.Plant.ESMGentine","page":"Plant Module","title":"Land.Plant.ESMGentine","text":"ESMGentine{FT}\n\nAn empirical model parameter set type for Gentine type model. The equation used for Gentine type model is gs = g0 + g1 * k_leaf/k_max * A/Ci. Note it that these empirical model often takes Ci or Cc as input, so a conversion from Pa to ppm is required. Note it that the Gentine model does not require for a β function to tune the soil drought response, but the use of k_leaf also does not permit post-drought stomatal response unless k_leaf can be recovered. \n\nFields\n\ng0\nminimal stomatal conductance g0 [mol m⁻² s⁻¹], should this one be temperature-dependent?\ng1\nslope of conductance-photosynthesis correlation [unitless]\n\n\n\n\n\n","category":"type"},{"location":"plant_module/#Land.Plant.ESMLeuning","page":"Plant Module","title":"Land.Plant.ESMLeuning","text":"ESMLeuning{FT}\n\nAn empirical model parameter set type for Leuning type model. The equation used for Leuning type model is gs = g0 + g1 * A/(Ci-Γ_star) * 1/(1+VPD/d0). Note it that these empirical model often takes Ci or Cc as input, so a conversion from Pa to ppm is required.\n\nFields\n\ng0\nminimal stomatal conductance g0 [mol m⁻² s⁻¹], should this one be temperature-dependent?\ng1\nslope of conductance-photosynthesis correlation [unitless]\nd0\nfitting parameter of d/d0 below the fraction, same unit as vpd [Pa]\n\n\n\n\n\n","category":"type"},{"location":"plant_module/#Land.Plant.ESMMedlyn","page":"Plant Module","title":"Land.Plant.ESMMedlyn","text":"ESMMedlyn{FT}\n\nAn empirical model parameter set type for Medlyn type model. The equation used in Medlyn type model is gs = g0 + (1+g1/sqrt(VPD)) * A/Ci. Note it that these empirical model often takes Ci or Cc as input, so a conversion from Pa to ppm is required.\n\nFields\n\ng0\nminimal stomatal conductance g0 [mol m⁻² s⁻¹], should this one be temperature-dependent?\ng1\nslope of conductance-photosynthesis correlation [Pa⁽⁵⁾]\n\n\n\n\n\n","category":"type"},{"location":"plant_module/#Land.Plant.OSMEller","page":"Plant Module","title":"Land.Plant.OSMEller","text":"OSMEller\n\nAn optimization model parameter set type for Eller model. The equation used for Eller model is ∂Θ/∂E = -∂K/∂E * A/K, where K is ∂E/∂P.\n\nFields\n\n\n\n\n\n","category":"type"},{"location":"plant_module/#Land.Plant.OSMSperry","page":"Plant Module","title":"Land.Plant.OSMSperry","text":"OSMSperry\n\nAn optimization model parameter set type for Sperry model. The equation used for Sperry model is ∂Θ/∂E = -∂K/∂E * Amax/Kmax, where K is ∂E/∂P.\n\nFields\n\n\n\n\n\n","category":"type"},{"location":"plant_module/#Land.Plant.OSMWang","page":"Plant Module","title":"Land.Plant.OSMWang","text":"OSMWang\n\nAn optimization model parameter set type for Eller type model. The equation used for Eller model is ∂Θ/∂E = A / (E_crit - E).\n\nFields\n\n\n\n\n\n","category":"type"},{"location":"plant_module/#Land.Plant.OSMWAP","page":"Plant Module","title":"Land.Plant.OSMWAP","text":"OSMWAP{FT}\n\nAn optimization model parameter set type for Wolf-Anderegg-Pacala type model. The equation used for Wolf-Anderegg-Pacala model is ∂Θ/∂E = (2aP+b) / K, where K is ∂P/∂E.\n\nFields\n\na\nQuadratic equation parameter [μmol m⁻² s⁻¹ MPa⁻²]\nb\nQuadratic equation parameter [μmol m⁻² s⁻¹ MPa⁻¹]\n\n\n\n\n\n","category":"type"},{"location":"plant_module/#Land.Plant.OSMWAPMod","page":"Plant Module","title":"Land.Plant.OSMWAPMod","text":"OSMWAPMod{FT}\n\nAn optimization model parameter set type for Wolf-Anderegg-Pacala type model, modified by adding a photosynthesis component while set b and c = 0. The equation used for modified Wolf-Anderegg-Pacala model is ∂Θ/∂E = a * P, where P is absolute value of leaf xylem pressure.\n\nFields\n\na\nQuadratic equation parameter [mol mol⁻¹ MPa⁻¹]\n\n\n\n\n\n","category":"type"},{"location":"plant_module/#Optimization-Stomatal-Dynamics-1","page":"Plant Module","title":"Optimization Stomatal Dynamics","text":"","category":"section"},{"location":"plant_module/#","page":"Plant Module","title":"Plant Module","text":"Land.Plant.get_marginal_gain\nLand.Plant.update_leaf_ak_max!\nLand.Plant.get_marginal_penalty\nLand.Plant.update_tree_with_time!","category":"page"},{"location":"plant_module/#Land.Plant.get_marginal_gain","page":"Plant Module","title":"Land.Plant.get_marginal_gain","text":"get_marginal_gain(canopyi, indx, photo_para_set)\n\nMarginal water use efficiency ∂A/∂E for a leaf in a canopy layer, given\n\ncanopyi A CanopyLayer in a Tree\nindx indx'th Leaf in the canopyi.leaf_list\n\n\n\n\n\nget_marginal_gain(canopyi, indx)\n\nA list of marginal water use efficiency for all the leaves, given\n\ncanopyi A CanopyLayer in a Tree\n\n\n\n\n\n","category":"function"},{"location":"plant_module/#Land.Plant.update_leaf_ak_max!","page":"Plant Module","title":"Land.Plant.update_leaf_ak_max!","text":"update_leaf_ak_max!(tree::Tree)\n\nUpdate leaf maximal A_net allowed at the given environmental conditions, given -tree A Tree type struct\n\nThis function is meant to work with Sperry et al. (2017) model, which requires a_max in the ∂Θ∂E function.\n\n\n\n\n\n","category":"function"},{"location":"plant_module/#Land.Plant.get_marginal_penalty","page":"Plant Module","title":"Land.Plant.get_marginal_penalty","text":"get_marginal_penalty(canopyi, indx, scheme::OSMEller)\n\nMarginal water penalty (∂Θ/∂E) for opening the stomata for a leaf in canopy layer, given\n\ncanopyi A CanopyLayer in a Tree\nindx indx'th Leaf in the canopyi.leaf_list\nscheme optimizaiton stomatal model scheme OSMEller\n\nThis function uses the Eller et al. (2018) model. ∂Θ/∂E = A / K * dK/dE, unit [mol mol⁻¹]. To make the Eller model suitable for multiple layer canopy, K at the leaf xylem end is used. Also, to make the model capable of handling drought history, loss of conductance is evaluated assuming no drought legacy from a more negative p_leaf.\n\n\n\n\n\nget_marginal_penalty(canopyi, scheme::OSMEller)\n\nList of marginal water penalty for all the leaves, given\n\ncanopyi A CanopyLayer in a Tree\nscheme optimizaiton stomatal model scheme OSMEller\n\nThis function uses the Eller et al. (2018) model. ∂Θ/∂E = A / K * dK/dE, unit [mol mol⁻¹]. To make the Eller model suitable for multiple layer canopy, K at the leaf xylem end is used. Also, to make the model capable of handling drought history, loss of conductance is evaluated assuming no drought legacy from a more negative p_leaf.\n\n\n\n\n\nget_marginal_penalty(canopyi, indx, scheme::OSMSperry)\n\nMarginal water penalty (∂Θ/∂E) for opening the stomata for a leaf in canopy layer, given\n\ncanopyi A CanopyLayer in a Tree\nindx indx'th Leaf in the canopyi.leaf_list\nscheme optimizaiton stomatal model scheme OSMSperry\n\nThis function uses the Sperry et al. (2017) model. ∂Θ/∂E = A_max / K_max * dK/dE, unit [mol mol⁻¹]. To make the Sperry model suitable for multiple layer canopy, K at the leaf xylem end is used. Also, to make the model capable of handling drought history, loss of conductance is evaluated assuming no drought legacy from a more negative p_leaf.\n\n\n\n\n\nget_marginal_penalty(canopyi, scheme::OSMSperry)\n\nList of marginal water penalty for all the leaves, given\n\ncanopyi A CanopyLayer in a Tree\nscheme optimizaiton stomatal model scheme OSMSperry\n\nThis function uses the Sperry et al. (2017) model. ∂Θ/∂E = A_max / K_max * dK/dE, unit [mol mol⁻¹]. To make the Sperry model suitable for multiple layer canopy, K at the leaf xylem end is used. Also, to make the model capable of handling drought history, loss of conductance is evaluated assuming no drought legacy from a more negative p_leaf.\n\n\n\n\n\nget_marginal_penalty(canopyi, indx, scheme::OSMWang)\n\nMarginal water penalty (∂Θ/∂E) for opening the stomata for a leaf in canopy layer, given\n\ncanopyi A CanopyLayer in a Tree\nindx indx'th Leaf in the canopyi.leaf_list\nscheme optimizaiton stomatal model scheme OSMWang\n\nThis function uses the Wang et al. (2020) model. ∂Θ/∂E = A / (e_crit - e_leaf), unit [mol mol⁻¹].\n\n\n\n\n\nget_marginal_penalty(canopyi, scheme::OSMWang)\n\nList of marginal water penalty for all the leaves, given\n\ncanopyi A CanopyLayer in a Tree\nscheme optimizaiton stomatal model scheme OSMWang\n\nThis function uses the Wang et al. (2020) model. ∂Θ/∂E = A / (e_crit - e_leaf), unit [mol mol⁻¹].\n\n\n\n\n\nget_marginal_penalty(canopyi, indx, scheme::OSMWAP)\n\nMarginal water penalty (∂Θ/∂E) for opening the stomata for a leaf in canopy layer, given\n\ncanopyi A CanopyLayer in a Tree\nindx indx'th Leaf in the canopyi.leaf_list\nscheme optimizaiton stomatal model scheme OSMWAP\n\nThis function uses the Anderegg et al. (2018) model. ∂Θ/∂E = (2*a*P + b) / K, unit [mol mol⁻¹].\n\n\n\n\n\nget_marginal_penalty(canopyi, scheme::OSMWAP)\n\nList of marginal water penalty for all the leaves, given\n\ncanopyi A CanopyLayer in a Tree\nscheme optimizaiton stomatal model scheme OSMWAP\n\nThis function uses the Anderegg et al. (2018) model. ∂Θ/∂E = (2*a*P + b*P) / K, unit [mol mol⁻¹].\n\n\n\n\n\nget_marginal_penalty(canopyi, indx, scheme::OSMWAPMod)\n\nMarginal water penalty (∂Θ/∂E) for opening the stomata for a leaf in canopy layer, given\n\ncanopyi A CanopyLayer in a Tree\nindx indx'th Leaf in the canopyi.leaf_list\nscheme optimizaiton stomatal model scheme OSMWAPMod\n\nThis function is modified from Anderegg et al. (2018) model. ∂Θ/∂E = a * A * P / K, unit [mol mol⁻¹].\n\n\n\n\n\nget_marginal_penalty(canopyi, scheme::OSMWAPMod)\n\nList of marginal water penalty for all the leaves, given\n\ncanopyi A CanopyLayer in a Tree\nscheme optimizaiton stomatal model scheme OSMWAPMod\n\nThis function is modified from Anderegg et al. (2018) model. ∂Θ/∂E = a * A * P / K, unit [mol mol⁻¹].\n\n\n\n\n\n","category":"function"},{"location":"plant_module/#Land.Plant.update_tree_with_time!","page":"Plant Module","title":"Land.Plant.update_tree_with_time!","text":"update_tree_with_time!(tree::Tree, Δt::FT, scheme::AbstractOptimizationStomatalModel; updating::Bool=false)\n\nUpdate the tree flux information and hydraulic parameters, given\n\ntree One Tree type\nΔt Δt of non-steady state gs\nscheme An AbstractOptimizationStomatalModel type optimization stomatal model scheme\nupdating If true, plant hydraulic parameters will be updated for the Tree\n\nThe function updates the stomatal conductance via a Δgsw = factor * (∂A/∂E - ∂Θ/∂E) for optimization stomatal models. The ∂A/∂E is the same for every stomatal control model, but ∂Θ/∂E differs among models.\n\n\n\n\n\nupdate_tree_with_time!(tree::Tree, Δt::FT, scheme::ESMGentine; updating::Bool=false)\n\nUpdate the tree flux information and hydraulic parameters, given\n\ntree One Tree type\nΔt Δt of non-steady state gs\nscheme An ESMGentine type empirical stomatal model scheme\nupdating If true, plant hydraulic parameters will be updated for the Tree\n\nThe function updates the stomatal conductance via a Δgsw = factor * (gs_ss - gs_nss) for empirical stomatal models like Ball-Berry, Leuning, and Medlyn models. The gs_ss stands for the gs at steady state, and gs_nss stands for gs at non-steady state.\n\n\n\n\n\nupdate_tree_with_time!(tree::Tree, Δt::FT, scheme::AbstractEmpiricalStomatalModel; updating::Bool=false)\n\nUpdate the tree flux information and hydraulic parameters, given\n\ntree One Tree type\nΔt Δt of non-steady state gs\nscheme An AbstractEmpiricalStomatalModel type empirical stomatal model scheme\nupdating If true, plant hydraulic parameters will be updated for the Tree\n\nThe function updates the stomatal conductance via a Δgsw = factor * (gs_ss - gs_nss) for empirical stomatal models like Ball-Berry, Leuning, and Medlyn models. The gs_ss stands for the gs at steady state, and gs_nss stands for gs at non-steady state.\n\n\n\n\n\n","category":"function"},{"location":"plant_module/#Empirical-Stomatal-Dynamics-1","page":"Plant Module","title":"Empirical Stomatal Dynamics","text":"","category":"section"},{"location":"plant_module/#","page":"Plant Module","title":"Plant Module","text":"Land.Plant.get_empirical_gsw_from_model\nLand.Plant.get_empirical_gsw\nLand.Plant.update_empirical_gsw_ss!","category":"page"},{"location":"plant_module/#Land.Plant.get_empirical_gsw_from_model","page":"Plant Module","title":"Land.Plant.get_empirical_gsw_from_model","text":"get_empirical_gsw_from_model(model::ESMBallBerry, an::FT, p_atm::FT, p_i::FT, rh::FT, vpd::FT, Γ_star::FT)\n\nSteady stage gsw from empirical approach given\n\nmodel An ESMBallBerry empirical model type parameter set\nan Net photosynthetic rate [μmol m⁻² s⁻¹]\np_atm Atmospheric pressure\np_i Leaf internal CO₂ partial pressure\nrh Relative humidity\nvpd Vapor pressure deficit in the air\nΓ_star CO₂ compensation point with the absence of dark respiration\n\nSome parameters are not used for the Ball-Berry type model.\n\n\n\n\n\nget_empirical_gsw_from_model(model::ESMGentine, an::FT, k_ratio::FT, p_atm::FT, p_i::FT)\n\nSteady stage gsw from empirical approach given\n\nmodel An ESMGentine empirical model type parameter set\nan Net photosynthetic rate [μmol m⁻² s⁻¹]\np_atm Atmospheric pressure\np_i Leaf internal CO₂ partial pressure\nrh Relative humidity\nvpd Vapor pressure deficit in the air\nΓ_star CO₂ compensation point with the absence of dark respiration\n\nSome parameters are not used for the Leuning type model.\n\n\n\n\n\nget_empirical_gsw_from_model(model::ESMLeuning, an::FT, p_atm::FT, p_i::FT, rh::FT, vpd::FT, Γ_star::FT)\n\nSteady stage gsw from empirical approach given\n\nmodel An ESMLeuning empirical model type parameter set\nan Net photosynthetic rate [μmol m⁻² s⁻¹]\np_atm Atmospheric pressure\np_i Leaf internal CO₂ partial pressure\nrh Relative humidity\nvpd Vapor pressure deficit in the air\nΓ_star CO₂ compensation point with the absence of dark respiration\n\nSome parameters are not used for the Leuning type model.\n\n\n\n\n\nget_empirical_gsw_from_model(model::ESMMedlyn, an::FT, p_atm::FT, p_i::FT, rh::FT, vpd::FT, Γ_star::FT)\n\nSteady stage gsw from empirical approach given\n\nmodel An ESMMedlyn empirical model type parameter set\nan Net photosynthetic rate [μmol m⁻² s⁻¹]\np_atm Atmospheric pressure\np_i Leaf internal CO₂ partial pressure\nrh Relative humidity\nvpd Vapor pressure deficit in the air\nΓ_star CO₂ compensation point with the absence of dark respiration\n\nSome parameters are not used for the Medlyn type model.\n\n\n\n\n\n","category":"function"},{"location":"plant_module/#Land.Plant.get_empirical_gsw","page":"Plant Module","title":"Land.Plant.get_empirical_gsw","text":"get_empirical_gsw(curvature::FT, g_ias_c::FT, g_ias_e::FT, g_max::FT, j25::FT, p25::FT, p_a::FT, p_atm::FT, p_H₂O::FT, p_O₂::FT, par::FT, qy::FT, r25::FT, t_leaf::FT, v25::FT, paraset::C3ParaSet, model::AbstractEmpiricalStomatalModel)\n\nSteady state gsw from empirical approach, given\n\ncurvature Curvature parameter to calculate J\ng_ias_c Mesophyll conductance correction multiplier\ng_ias_e Mesophyll conductance correction exponent\ng_max Maximal leaf diffusive conductance at 298.15 K\nj25 Maximal electron transport rate at 298.15 K (25 Celcius)\np25 Maximal PEP carboxylation rate at 298.15 K, C4 plant only\np_a Atmospheric CO₂ partial pressure\np_atm Atmospheric pressure\np_H₂O Atmospheric H₂O partial pressure\np_O₂ O₂ partial pressure\npar Photosynthetic active radiation\nqy Quantum yield of electron\nr25 Leaf respiration rate at 298.15 K (25 Celcius). If ==Inf, r25 will be computed from v25\nt_leaf Leaf temperature\nv25 Maixmal carboxylation rate at 298.15 K (25 Celcius)\nparaset An C3ParaSet type parameter set\nmodel An AbstractEmpiricalStomatalModel empirical model type\n\n\n\n\n\nget_empirical_gsw(curvature::FT, g_ias_c::FT, g_ias_e::FT, g_max::FT, j25::FT, p25::FT, p_a::FT, p_atm::FT, p_H₂O::FT, p_O₂::FT, par::FT, qy::FT, r25::FT, t_leaf::FT, v25::FT, paraset::C3ParaSet, model::AbstractEmpiricalStomatalModel)\n\nSteady state gsw from empirical approach, given\n\ncurvature Curvature parameter to calculate J\ng_ias_c Mesophyll conductance correction multiplier\ng_ias_e Mesophyll conductance correction exponent\ng_max Maximal leaf diffusive conductance at 298.15 K\nj25 Maximal electron transport rate at 298.15 K (25 Celcius)\np25 Maximal PEP carboxylation rate at 298.15 K, C4 plant only\np_a Atmospheric CO₂ partial pressure\np_atm Atmospheric pressure\np_H₂O Atmospheric H₂O partial pressure\np_O₂ O₂ partial pressure\npar Photosynthetic active radiation\nqy Quantum yield of electron\nr25 Leaf respiration rate at 298.15 K (25 Celcius). If ==Inf, r25 will be computed from v25\nt_leaf Leaf temperature\nv25 Maixmal carboxylation rate at 298.15 K (25 Celcius)\nparaset An C4ParaSet type parameter set\nmodel An AbstractEmpiricalStomatalModel empirical model type\n\n\n\n\n\n","category":"function"},{"location":"plant_module/#Photosynthesis-Tools-1","page":"Plant Module","title":"Photosynthesis Tools","text":"","category":"section"},{"location":"plant_module/#","page":"Plant Module","title":"Plant Module","text":"Land.Plant.get_a_par_curve\nLand.Plant.get_a_pi_curve","category":"page"},{"location":"plant_module/#Land.Plant.get_a_par_curve","page":"Plant Module","title":"Land.Plant.get_a_par_curve","text":"get_a_par_curve(v25, j25, Γ_star, gsc, p_a, tem, p_O₂, r25)\n\nLists of phtosynthetic active radiation list_par, net phtosynthetic rate list_an, gross phtosynthetic rate list_ag, and leaf internal CO₂ partial pressure list_pi, given constant\n\nv25 Maximal carboxylation rate at 298.15 K (25 Celcius)\nj25 Maximal electron transport rate at 298.15 K\nΓ_star CO₂ compensation point with the absence of dark respiration\ngsc Leaf diffusive conductance to CO₂\np_a Atmospheric CO₂ partial pressure\ntem Leaf temperature\np_atm Atmospheric pressure\np_O₂ O₂ partial pressure\nr25 Leaf respiration rate at 298.15 K. If ==Inf, use v25 to compute r25.\n\nDescription\n\nThis function is meant to obtain the Anet-PAR curve. This function may also be used to test the phtosynthesis module.\n\n\n\n\n\n","category":"function"},{"location":"plant_module/#Land.Plant.get_a_pi_curve","page":"Plant Module","title":"Land.Plant.get_a_pi_curve","text":"get_a_pi_curve(v25, j25, Γ_star, tem, par, p_O₂, r25)\n\nLists of leaf internal CO₂ partial pressure list_pi, net photosynthetic rate list_an, and gross photosynthetic rate list_ag, given constant\n\nv25 Maximal carboxylation rate at 298.15 K (25 Celcius)\nj25 Maximal electron transport rate at 298.15 K\nΓ_star CO₂ compensation point with the absence of dark respiration\ntem Leaf temperature\npar Photosynthetic active radiation\np_O₂ O₂ partial pressure\nr25 Leaf respiration rate at 298.15 K. If ==Inf, use v25 to compute r25.\n\n\n\n\n\n","category":"function"},{"location":"plant_module/#Interfaces-1","page":"Plant Module","title":"Interfaces","text":"","category":"section"},{"location":"plant_module/#","page":"Plant Module","title":"Plant Module","text":"Land.Plant.initialize_rt_module\nLand.Plant.update_canopy_from_rt_module!","category":"page"},{"location":"plant_module/#Land.Plant.initialize_rt_module","page":"Plant Module","title":"Land.Plant.initialize_rt_module","text":"initialize_rt_module(n_layer)\n\nInitialize the RT module so as to interface with Plant, given\n\nn_layer Number of canopy layers\nLAI Leaf area index\n\nNote it here that the structcanopy is used in CanopyRT module. This function initializes `canopyrt,canOptrt,canRadrt,arrayOfLeaves` as local variables rather than global variables as in CanopyRT module. See CanopyRT module for further operations on these variables.\n\n\n\n\n\n","category":"function"},{"location":"plant_module/#Land.Plant.update_canopy_from_rt_module!","page":"Plant Module","title":"Land.Plant.update_canopy_from_rt_module!","text":"update_canopy_from_rt_module!(tree::Tree, canopy_rt::struct_canopy, canOpt_rt::struct_canopyOptProps, canRad_rt::struct_canopyRadiation)\n\nUpdates canopy information from the RT module, given\n\ntree A Tree type\ncanopy_rt A [struct_canopy] type from the Plant module\ncadOpt_rt A [struct_canopyOptProps] type from the CanopyRT module\ncanRad_rt A [struct_canopyRadiation] type from the CanopyRT module\n\nThis interface function is pending for leaf temperature...\n\n\n\n\n\n","category":"function"},{"location":"plant_module/#Water-Physics-(need-generalization)-1","page":"Plant Module","title":"Water Physics (need generalization)","text":"","category":"section"},{"location":"plant_module/#","page":"Plant Module","title":"Plant Module","text":"Land.Plant.get_relative_surface_tension\nLand.Plant.get_relative_viscosity\nLand.Plant.get_saturated_vapor_pressure\nLand.Plant.get_specific_latent_heat","category":"page"},{"location":"plant_module/#Land.Plant.get_relative_surface_tension","page":"Plant Module","title":"Land.Plant.get_relative_surface_tension","text":"get_relative_surface_tension(tem)\n\nSurface tension of water relative to 25 degree C (298.15 K), given\n\ntem Water temperature\n\nThe equations used are γ     = V^(-2/3) * k * (tem_c-tem) γ/γ25 = (tem_c - tem) / (tem_c - 298.15) The empirical values are k     = 2.1E-7 J K^-1 mol^(-2/3) V     = 18.0 ml/mol tem_c = 647.0 K\n\nMay need to merge with other CLIMA repository to be consistent.\n\n\n\n\n\n","category":"function"},{"location":"plant_module/#Land.Plant.get_relative_viscosity","page":"Plant Module","title":"Land.Plant.get_relative_viscosity","text":"get_relative_viscosity(tem)\n\nViscosity relative to 25 degree C (298.15 K), given\n\ntem Water temperature\n\nEquations used are υ     = A * exp( B/tem + C*tem + D*tem^2 ) υ/υ25 = exp( B/tem + C*tem + D*tem^2 - B/tem25 - C*tem25 - D*tem25^2 ) fitting parameters are from Reid, Prausnitz, & Poling (1987), valid through 273-643 K A = 1.856E-11 mPa s B = 4209      K C = 0.04527   K⁻¹ D = -3.376E-5 K⁻²\n\nMay need to merge with other CLIMA repository to be consistent.\n\n\n\n\n\n","category":"function"},{"location":"plant_module/#Land.Plant.get_saturated_vapor_pressure","page":"Plant Module","title":"Land.Plant.get_saturated_vapor_pressure","text":"get_saturated_vapor_pressure(tem)\n\nSaturated vapor pressure in [Pa], given\n\ntem Water temperature\n\nSaturated vapor pressure is computed using 611.0 * exp(17.502 * temc / (temc + 240.97)).\n\nMay need to merge with other CLIMA repository to be consistent.\n\n\n\n\n\nget_saturated_vapor_pressure(tem)\n\nList of saturated vapor pressure in [Pa], given\n\ntem A list of temperatures\n\nSaturated vapor pressure is computed using 611.0 * exp(17.502 * temc / (temc + 240.97)).\n\nMay need to merge with other CLIMA repository to be consistent.\n\n\n\n\n\n","category":"function"},{"location":"plant_module/#Land.Plant.get_specific_latent_heat","page":"Plant Module","title":"Land.Plant.get_specific_latent_heat","text":"get_specific_latent_heat(tem)\n\nSpecific latent heat, given\n\ntem Water temperature\n\nEquation used is λ = (2500.8 - 2.36*tem + 0.0016*tem^2 -0.00006*tem^3) when tem in -25 to 40 degree C See Polynomial curve fits to Table 2.1. R. R. Rogers; M. K. Yau (1989). A Short Course in Cloud Physics (3rd ed.). Pergamon Press. p. 16. ISBN 0-7506-3215-1.\n\nMay need to merge with other CLIMA repository to be consistent.\n\n\n\n\n\n","category":"function"}]
}
